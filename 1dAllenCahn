{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "2063695f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2024-08-24T21:33:52.983103Z",
     "iopub.status.busy": "2024-08-24T21:33:52.982355Z",
     "iopub.status.idle": "2024-08-24T21:34:09.537350Z",
     "shell.execute_reply": "2024-08-24T21:34:09.536265Z"
    },
    "papermill": {
     "duration": 16.561446,
     "end_time": "2024-08-24T21:34:09.539689",
     "exception": false,
     "start_time": "2024-08-24T21:33:52.978243",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Collecting deepxde\r\n",
      "  Downloading DeepXDE-1.12.0-py3-none-any.whl.metadata (12 kB)\r\n",
      "Requirement already satisfied: tensorflow in /opt/conda/lib/python3.10/site-packages (2.15.0)\r\n",
      "Requirement already satisfied: matplotlib in /opt/conda/lib/python3.10/site-packages (from deepxde) (3.7.5)\r\n",
      "Requirement already satisfied: numpy in /opt/conda/lib/python3.10/site-packages (from deepxde) (1.26.4)\r\n",
      "Requirement already satisfied: scikit-learn in /opt/conda/lib/python3.10/site-packages (from deepxde) (1.2.2)\r\n",
      "Requirement already satisfied: scikit-optimize>=0.9.0 in /opt/conda/lib/python3.10/site-packages (from deepxde) (0.10.2)\r\n",
      "Requirement already satisfied: scipy in /opt/conda/lib/python3.10/site-packages (from deepxde) (1.11.4)\r\n",
      "Requirement already satisfied: absl-py>=1.0.0 in /opt/conda/lib/python3.10/site-packages (from tensorflow) (1.4.0)\r\n",
      "Requirement already satisfied: astunparse>=1.6.0 in /opt/conda/lib/python3.10/site-packages (from tensorflow) (1.6.3)\r\n",
      "Requirement already satisfied: flatbuffers>=23.5.26 in /opt/conda/lib/python3.10/site-packages (from tensorflow) (23.5.26)\r\n",
      "Requirement already satisfied: gast!=0.5.0,!=0.5.1,!=0.5.2,>=0.2.1 in /opt/conda/lib/python3.10/site-packages (from tensorflow) (0.5.4)\r\n",
      "Requirement already satisfied: google-pasta>=0.1.1 in /opt/conda/lib/python3.10/site-packages (from tensorflow) (0.2.0)\r\n",
      "Requirement already satisfied: h5py>=2.9.0 in /opt/conda/lib/python3.10/site-packages (from tensorflow) (3.10.0)\r\n",
      "Requirement already satisfied: libclang>=13.0.0 in /opt/conda/lib/python3.10/site-packages (from tensorflow) (16.0.6)\r\n",
      "Requirement already satisfied: ml-dtypes~=0.2.0 in /opt/conda/lib/python3.10/site-packages (from tensorflow) (0.2.0)\r\n",
      "Requirement already satisfied: opt-einsum>=2.3.2 in /opt/conda/lib/python3.10/site-packages (from tensorflow) (3.3.0)\r\n",
      "Requirement already satisfied: packaging in /opt/conda/lib/python3.10/site-packages (from tensorflow) (21.3)\r\n",
      "Requirement already satisfied: protobuf!=4.21.0,!=4.21.1,!=4.21.2,!=4.21.3,!=4.21.4,!=4.21.5,<5.0.0dev,>=3.20.3 in /opt/conda/lib/python3.10/site-packages (from tensorflow) (3.20.3)\r\n",
      "Requirement already satisfied: setuptools in /opt/conda/lib/python3.10/site-packages (from tensorflow) (69.0.3)\r\n",
      "Requirement already satisfied: six>=1.12.0 in /opt/conda/lib/python3.10/site-packages (from tensorflow) (1.16.0)\r\n",
      "Requirement already satisfied: termcolor>=1.1.0 in /opt/conda/lib/python3.10/site-packages (from tensorflow) (2.4.0)\r\n",
      "Requirement already satisfied: typing-extensions>=3.6.6 in /opt/conda/lib/python3.10/site-packages (from tensorflow) (4.9.0)\r\n",
      "Requirement already satisfied: wrapt<1.15,>=1.11.0 in /opt/conda/lib/python3.10/site-packages (from tensorflow) (1.14.1)\r\n",
      "Requirement already satisfied: tensorflow-io-gcs-filesystem>=0.23.1 in /opt/conda/lib/python3.10/site-packages (from tensorflow) (0.35.0)\r\n",
      "Requirement already satisfied: grpcio<2.0,>=1.24.3 in /opt/conda/lib/python3.10/site-packages (from tensorflow) (1.60.0)\r\n",
      "Requirement already satisfied: tensorboard<2.16,>=2.15 in /opt/conda/lib/python3.10/site-packages (from tensorflow) (2.15.1)\r\n",
      "Requirement already satisfied: tensorflow-estimator<2.16,>=2.15.0 in /opt/conda/lib/python3.10/site-packages (from tensorflow) (2.15.0)\r\n",
      "Collecting keras<2.16,>=2.15.0 (from tensorflow)\r\n",
      "  Downloading keras-2.15.0-py3-none-any.whl.metadata (2.4 kB)\r\n",
      "Requirement already satisfied: wheel<1.0,>=0.23.0 in /opt/conda/lib/python3.10/site-packages (from astunparse>=1.6.0->tensorflow) (0.42.0)\r\n",
      "Requirement already satisfied: joblib>=0.11 in /opt/conda/lib/python3.10/site-packages (from scikit-optimize>=0.9.0->deepxde) (1.4.2)\r\n",
      "Requirement already satisfied: pyaml>=16.9 in /opt/conda/lib/python3.10/site-packages (from scikit-optimize>=0.9.0->deepxde) (24.4.0)\r\n",
      "Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /opt/conda/lib/python3.10/site-packages (from packaging->tensorflow) (3.1.1)\r\n",
      "Requirement already satisfied: threadpoolctl>=2.0.0 in /opt/conda/lib/python3.10/site-packages (from scikit-learn->deepxde) (3.2.0)\r\n",
      "Requirement already satisfied: google-auth<3,>=1.6.3 in /opt/conda/lib/python3.10/site-packages (from tensorboard<2.16,>=2.15->tensorflow) (2.26.1)\r\n",
      "Requirement already satisfied: google-auth-oauthlib<2,>=0.5 in /opt/conda/lib/python3.10/site-packages (from tensorboard<2.16,>=2.15->tensorflow) (1.2.0)\r\n",
      "Requirement already satisfied: markdown>=2.6.8 in /opt/conda/lib/python3.10/site-packages (from tensorboard<2.16,>=2.15->tensorflow) (3.5.2)\r\n",
      "Requirement already satisfied: requests<3,>=2.21.0 in /opt/conda/lib/python3.10/site-packages (from tensorboard<2.16,>=2.15->tensorflow) (2.32.3)\r\n",
      "Requirement already satisfied: tensorboard-data-server<0.8.0,>=0.7.0 in /opt/conda/lib/python3.10/site-packages (from tensorboard<2.16,>=2.15->tensorflow) (0.7.2)\r\n",
      "Requirement already satisfied: werkzeug>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from tensorboard<2.16,>=2.15->tensorflow) (3.0.3)\r\n",
      "Requirement already satisfied: contourpy>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->deepxde) (1.2.0)\r\n",
      "Requirement already satisfied: cycler>=0.10 in /opt/conda/lib/python3.10/site-packages (from matplotlib->deepxde) (0.12.1)\r\n",
      "Requirement already satisfied: fonttools>=4.22.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib->deepxde) (4.47.0)\r\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in /opt/conda/lib/python3.10/site-packages (from matplotlib->deepxde) (1.4.5)\r\n",
      "Requirement already satisfied: pillow>=6.2.0 in /opt/conda/lib/python3.10/site-packages (from matplotlib->deepxde) (9.5.0)\r\n",
      "Requirement already satisfied: python-dateutil>=2.7 in /opt/conda/lib/python3.10/site-packages (from matplotlib->deepxde) (2.9.0.post0)\r\n",
      "Requirement already satisfied: cachetools<6.0,>=2.0.0 in /opt/conda/lib/python3.10/site-packages (from google-auth<3,>=1.6.3->tensorboard<2.16,>=2.15->tensorflow) (4.2.4)\r\n",
      "Requirement already satisfied: pyasn1-modules>=0.2.1 in /opt/conda/lib/python3.10/site-packages (from google-auth<3,>=1.6.3->tensorboard<2.16,>=2.15->tensorflow) (0.3.0)\r\n",
      "Requirement already satisfied: rsa<5,>=3.1.4 in /opt/conda/lib/python3.10/site-packages (from google-auth<3,>=1.6.3->tensorboard<2.16,>=2.15->tensorflow) (4.9)\r\n",
      "Requirement already satisfied: requests-oauthlib>=0.7.0 in /opt/conda/lib/python3.10/site-packages (from google-auth-oauthlib<2,>=0.5->tensorboard<2.16,>=2.15->tensorflow) (1.3.1)\r\n",
      "Requirement already satisfied: PyYAML in /opt/conda/lib/python3.10/site-packages (from pyaml>=16.9->scikit-optimize>=0.9.0->deepxde) (6.0.1)\r\n",
      "Requirement already satisfied: charset-normalizer<4,>=2 in /opt/conda/lib/python3.10/site-packages (from requests<3,>=2.21.0->tensorboard<2.16,>=2.15->tensorflow) (3.3.2)\r\n",
      "Requirement already satisfied: idna<4,>=2.5 in /opt/conda/lib/python3.10/site-packages (from requests<3,>=2.21.0->tensorboard<2.16,>=2.15->tensorflow) (3.6)\r\n",
      "Requirement already satisfied: urllib3<3,>=1.21.1 in /opt/conda/lib/python3.10/site-packages (from requests<3,>=2.21.0->tensorboard<2.16,>=2.15->tensorflow) (1.26.18)\r\n",
      "Requirement already satisfied: certifi>=2017.4.17 in /opt/conda/lib/python3.10/site-packages (from requests<3,>=2.21.0->tensorboard<2.16,>=2.15->tensorflow) (2024.7.4)\r\n",
      "Requirement already satisfied: MarkupSafe>=2.1.1 in /opt/conda/lib/python3.10/site-packages (from werkzeug>=1.0.1->tensorboard<2.16,>=2.15->tensorflow) (2.1.3)\r\n",
      "Requirement already satisfied: pyasn1<0.6.0,>=0.4.6 in /opt/conda/lib/python3.10/site-packages (from pyasn1-modules>=0.2.1->google-auth<3,>=1.6.3->tensorboard<2.16,>=2.15->tensorflow) (0.5.1)\r\n",
      "Requirement already satisfied: oauthlib>=3.0.0 in /opt/conda/lib/python3.10/site-packages (from requests-oauthlib>=0.7.0->google-auth-oauthlib<2,>=0.5->tensorboard<2.16,>=2.15->tensorflow) (3.2.2)\r\n",
      "Downloading DeepXDE-1.12.0-py3-none-any.whl (183 kB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m183.7/183.7 kB\u001b[0m \u001b[31m8.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hDownloading keras-2.15.0-py3-none-any.whl (1.7 MB)\r\n",
      "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m1.7/1.7 MB\u001b[0m \u001b[31m57.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\r\n",
      "\u001b[?25hInstalling collected packages: keras, deepxde\r\n",
      "  Attempting uninstall: keras\r\n",
      "    Found existing installation: keras 3.4.1\r\n",
      "    Uninstalling keras-3.4.1:\r\n",
      "      Successfully uninstalled keras-3.4.1\r\n",
      "\u001b[31mERROR: pip's dependency resolver does not currently take into account all the packages that are installed. This behaviour is the source of the following dependency conflicts.\r\n",
      "tensorflow-decision-forests 1.8.1 requires wurlitzer, which is not installed.\u001b[0m\u001b[31m\r\n",
      "\u001b[0mSuccessfully installed deepxde-1.12.0 keras-2.15.0\r\n"
     ]
    }
   ],
   "source": [
    "!pip install deepxde tensorflow\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "10ddadd6",
   "metadata": {
    "_cell_guid": "b1076dfc-b9ad-4769-8c92-a6c4dae69d19",
    "_uuid": "8f2839f25d086af736a60e9eeb907d3b93b6e0e5",
    "execution": {
     "iopub.execute_input": "2024-08-24T21:34:09.549392Z",
     "iopub.status.busy": "2024-08-24T21:34:09.549079Z",
     "iopub.status.idle": "2024-08-24T23:24:49.666999Z",
     "shell.execute_reply": "2024-08-24T23:24:49.666076Z"
    },
    "papermill": {
     "duration": 6640.125223,
     "end_time": "2024-08-24T23:24:49.669047",
     "exception": false,
     "start_time": "2024-08-24T21:34:09.543824",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "2024-08-24 21:34:11.206387: E external/local_xla/xla/stream_executor/cuda/cuda_dnn.cc:9261] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered\n",
      "2024-08-24 21:34:11.206505: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:607] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered\n",
      "2024-08-24 21:34:11.328893: E external/local_xla/xla/stream_executor/cuda/cuda_blas.cc:1515] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered\n",
      "Using backend: tensorflow\n",
      "Other supported backends: tensorflow.compat.v1, pytorch, jax, paddle.\n",
      "paddle supports more examples now and is recommended.\n",
      "Enable just-in-time compilation with XLA.\n",
      "\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[-1.          0.         -0.97347814  4.68327951]\n",
      " [-0.99        0.         -0.97071463  4.68033266]\n",
      " [-0.98        0.         -0.96758276  4.6894865 ]\n",
      " ...\n",
      " [ 0.98        0.02       -0.898314    4.6621666 ]\n",
      " [ 0.99        0.02       -0.89778441  4.64194965]\n",
      " [ 1.          0.02       -0.89689517  4.63153839]]\n",
      "Compiling model...\n",
      "'compile' took 0.003992 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.10/site-packages/keras/src/initializers/initializers.py:120: UserWarning: The initializer GlorotNormal is unseeded and being called multiple times, which will return identical values each time (even if the initializer is unseeded). Please update your code to provide a seed to the initializer, or avoid using the same initializer instance more than once.\n",
      "  warnings.warn(\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\n",
      "I0000 00:00:1724535270.927983      23 device_compiler.h:186] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "0         [1.85e-01, 1.24e+00, 2.35e-06, 6.14e-01, 5.52e+04]    [1.81e-01, 1.24e+00, 2.35e-06, 6.14e-01, 5.52e+04]    []  \n",
      "0 [5.00e-01]\n",
      "0 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724535280.669931      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1000      [3.91e+02, 3.29e-04, 1.21e+01, 4.21e+00, 4.70e+04]    [4.10e+02, 3.29e-04, 1.21e+01, 4.21e+00, 4.70e+04]    []  \n",
      "1000 [5.86e-03]\n",
      "1000 [1.00e+00]\n",
      "\n",
      "Best model at step 1000:\n",
      "  train loss: 4.74e+04\n",
      "  test loss: 4.74e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 54.508036 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011731 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "1000      [3.91e+02, 3.29e-04, 1.21e+01, 4.21e+00, 4.70e+04]    [4.10e+02, 3.29e-04, 1.21e+01, 4.21e+00, 4.70e+04]    []  \n",
      "1000 [5.86e-03]\n",
      "1000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724535327.670246      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "2000      [3.74e+02, 4.23e-05, 1.31e+01, 4.40e+00, 4.69e+04]    [4.01e+02, 4.23e-05, 1.31e+01, 4.40e+00, 4.69e+04]    []  \n",
      "2000 [4.07e-03]\n",
      "2000 [1.00e+00]\n",
      "\n",
      "Best model at step 2000:\n",
      "  train loss: 4.73e+04\n",
      "  test loss: 4.73e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.884549 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008514 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "2000      [3.74e+02, 4.23e-05, 1.31e+01, 4.40e+00, 4.69e+04]    [4.01e+02, 4.23e-05, 1.31e+01, 4.40e+00, 4.69e+04]    []  \n",
      "2000 [4.07e-03]\n",
      "2000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724535374.493090      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3000      [5.68e+02, 6.47e-05, 1.34e+01, 4.52e+00, 4.68e+04]    [6.12e+02, 6.47e-05, 1.34e+01, 4.52e+00, 4.68e+04]    []  \n",
      "3000 [3.60e-03]\n",
      "3000 [1.00e+00]\n",
      "\n",
      "Best model at step 2000:\n",
      "  train loss: 4.73e+04\n",
      "  test loss: 4.73e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.806984 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011400 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "3000      [5.68e+02, 6.47e-05, 1.34e+01, 4.52e+00, 4.68e+04]    [6.12e+02, 6.47e-05, 1.34e+01, 4.52e+00, 4.68e+04]    []  \n",
      "3000 [3.60e-03]\n",
      "3000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724535421.428387      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4000      [7.89e+02, 2.94e-03, 1.37e+01, 4.59e+00, 4.68e+04]    [8.12e+02, 2.94e-03, 1.37e+01, 4.59e+00, 4.68e+04]    []  \n",
      "4000 [3.19e-03]\n",
      "4000 [1.00e+00]\n",
      "\n",
      "Best model at step 2000:\n",
      "  train loss: 4.73e+04\n",
      "  test loss: 4.73e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.012896 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.013865 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "4000      [7.89e+02, 2.94e-03, 1.37e+01, 4.59e+00, 4.68e+04]    [8.12e+02, 2.94e-03, 1.37e+01, 4.59e+00, 4.68e+04]    []  \n",
      "4000 [3.19e-03]\n",
      "4000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724535468.801330      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "5000      [3.73e+02, 2.63e-05, 1.37e+01, 4.68e+00, 4.68e+04]    [3.88e+02, 2.63e-05, 1.37e+01, 4.68e+00, 4.68e+04]    []  \n",
      "5000 [3.02e-03]\n",
      "5000 [1.00e+00]\n",
      "\n",
      "Best model at step 5000:\n",
      "  train loss: 4.72e+04\n",
      "  test loss: 4.72e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.380923 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011892 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "5000      [3.73e+02, 2.63e-05, 1.37e+01, 4.68e+00, 4.68e+04]    [3.88e+02, 2.63e-05, 1.37e+01, 4.68e+00, 4.68e+04]    []  \n",
      "5000 [3.02e-03]\n",
      "5000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724535515.894654      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "6000      [3.57e+02, 7.72e-05, 1.37e+01, 4.75e+00, 4.67e+04]    [3.68e+02, 7.72e-05, 1.37e+01, 4.75e+00, 4.67e+04]    []  \n",
      "6000 [2.89e-03]\n",
      "6000 [1.00e+00]\n",
      "\n",
      "Best model at step 6000:\n",
      "  train loss: 4.71e+04\n",
      "  test loss: 4.71e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.103532 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011640 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "6000      [3.57e+02, 7.72e-05, 1.37e+01, 4.75e+00, 4.67e+04]    [3.68e+02, 7.72e-05, 1.37e+01, 4.75e+00, 4.67e+04]    []  \n",
      "6000 [2.89e-03]\n",
      "6000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724535562.968994      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7000      [3.32e+02, 2.69e-04, 1.36e+01, 4.78e+00, 4.68e+04]    [3.39e+02, 2.69e-04, 1.36e+01, 4.78e+00, 4.68e+04]    []  \n",
      "7000 [3.11e-03]\n",
      "7000 [1.00e+00]\n",
      "\n",
      "Best model at step 7000:\n",
      "  train loss: 4.71e+04\n",
      "  test loss: 4.71e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.996566 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011470 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "7000      [3.32e+02, 2.69e-04, 1.36e+01, 4.78e+00, 4.68e+04]    [3.39e+02, 2.69e-04, 1.36e+01, 4.78e+00, 4.68e+04]    []  \n",
      "7000 [3.11e-03]\n",
      "7000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724535609.973584      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "8000      [3.45e+02, 5.73e-04, 1.37e+01, 4.88e+00, 4.67e+04]    [3.48e+02, 5.73e-04, 1.37e+01, 4.88e+00, 4.67e+04]    []  \n",
      "8000 [3.05e-03]\n",
      "8000 [1.00e+00]\n",
      "\n",
      "Best model at step 8000:\n",
      "  train loss: 4.71e+04\n",
      "  test loss: 4.71e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.034654 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011467 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "8000      [3.45e+02, 5.73e-04, 1.37e+01, 4.88e+00, 4.67e+04]    [3.48e+02, 5.73e-04, 1.37e+01, 4.88e+00, 4.67e+04]    []  \n",
      "8000 [3.05e-03]\n",
      "8000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724535657.456940      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "9000      [3.23e+02, 1.09e-03, 1.33e+01, 4.90e+00, 4.67e+04]    [3.17e+02, 1.09e-03, 1.33e+01, 4.90e+00, 4.67e+04]    []  \n",
      "9000 [3.04e-03]\n",
      "9000 [1.00e+00]\n",
      "\n",
      "Best model at step 9000:\n",
      "  train loss: 4.71e+04\n",
      "  test loss: 4.71e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.442566 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011621 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "9000      [3.23e+02, 1.09e-03, 1.33e+01, 4.90e+00, 4.67e+04]    [3.17e+02, 1.09e-03, 1.33e+01, 4.90e+00, 4.67e+04]    []  \n",
      "9000 [3.04e-03]\n",
      "9000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724535704.508104      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "10000     [3.43e+02, 1.71e-03, 1.34e+01, 5.02e+00, 4.67e+04]    [3.36e+02, 1.71e-03, 1.34e+01, 5.02e+00, 4.67e+04]    []  \n",
      "10000 [2.81e-03]\n",
      "10000 [1.00e+00]\n",
      "\n",
      "Best model at step 10000:\n",
      "  train loss: 4.70e+04\n",
      "  test loss: 4.70e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.052370 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007998 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "10000     [3.43e+02, 1.71e-03, 1.34e+01, 5.02e+00, 4.67e+04]    [3.36e+02, 1.71e-03, 1.34e+01, 5.02e+00, 4.67e+04]    []  \n",
      "10000 [2.81e-03]\n",
      "10000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724535751.447668      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "11000     [2.62e+02, 2.83e-03, 1.23e+01, 4.91e+00, 4.68e+04]    [2.47e+02, 2.83e-03, 1.23e+01, 4.91e+00, 4.68e+04]    []  \n",
      "11000 [2.95e-03]\n",
      "11000 [1.00e+00]\n",
      "\n",
      "Best model at step 10000:\n",
      "  train loss: 4.70e+04\n",
      "  test loss: 4.70e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.774198 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007754 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "11000     [2.62e+02, 2.83e-03, 1.23e+01, 4.91e+00, 4.68e+04]    [2.47e+02, 2.83e-03, 1.23e+01, 4.91e+00, 4.68e+04]    []  \n",
      "11000 [2.95e-03]\n",
      "11000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724535798.102663      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "12000     [3.70e+02, 4.27e-03, 1.27e+01, 5.22e+00, 4.66e+04]    [3.56e+02, 4.27e-03, 1.27e+01, 5.22e+00, 4.66e+04]    []  \n",
      "12000 [2.88e-03]\n",
      "12000 [1.00e+00]\n",
      "\n",
      "Best model at step 12000:\n",
      "  train loss: 4.70e+04\n",
      "  test loss: 4.70e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.644588 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007802 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "12000     [3.70e+02, 4.27e-03, 1.27e+01, 5.22e+00, 4.66e+04]    [3.56e+02, 4.27e-03, 1.27e+01, 5.22e+00, 4.66e+04]    []  \n",
      "12000 [2.88e-03]\n",
      "12000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724535844.880521      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "13000     [3.10e+02, 5.20e-03, 1.25e+01, 5.33e+00, 4.66e+04]    [2.83e+02, 5.20e-03, 1.25e+01, 5.33e+00, 4.66e+04]    []  \n",
      "13000 [2.85e-03]\n",
      "13000 [1.00e+00]\n",
      "\n",
      "Best model at step 13000:\n",
      "  train loss: 4.69e+04\n",
      "  test loss: 4.69e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.799459 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007636 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "13000     [3.10e+02, 5.20e-03, 1.25e+01, 5.33e+00, 4.66e+04]    [2.83e+02, 5.20e-03, 1.25e+01, 5.33e+00, 4.66e+04]    []  \n",
      "13000 [2.85e-03]\n",
      "13000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724535891.636600      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "14000     [2.26e+03, 6.12e-03, 1.22e+01, 5.48e+00, 4.66e+04]    [2.14e+03, 6.12e-03, 1.22e+01, 5.48e+00, 4.66e+04]    []  \n",
      "14000 [2.66e-03]\n",
      "14000 [1.00e+00]\n",
      "\n",
      "Best model at step 13000:\n",
      "  train loss: 4.69e+04\n",
      "  test loss: 4.69e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.762834 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007942 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "14000     [2.26e+03, 6.12e-03, 1.22e+01, 5.48e+00, 4.66e+04]    [2.14e+03, 6.12e-03, 1.22e+01, 5.48e+00, 4.66e+04]    []  \n",
      "14000 [2.66e-03]\n",
      "14000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724535939.110270      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "15000     [2.76e+02, 6.03e-03, 1.17e+01, 5.58e+00, 4.66e+04]    [2.40e+02, 6.03e-03, 1.17e+01, 5.58e+00, 4.66e+04]    []  \n",
      "15000 [2.83e-03]\n",
      "15000 [1.00e+00]\n",
      "\n",
      "Best model at step 15000:\n",
      "  train loss: 4.69e+04\n",
      "  test loss: 4.69e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.478576 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008520 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "15000     [2.76e+02, 6.03e-03, 1.17e+01, 5.58e+00, 4.66e+04]    [2.40e+02, 6.03e-03, 1.17e+01, 5.58e+00, 4.66e+04]    []  \n",
      "15000 [2.83e-03]\n",
      "15000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724535985.984331      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "16000     [2.57e+02, 5.58e-03, 1.13e+01, 5.66e+00, 4.66e+04]    [2.18e+02, 5.58e-03, 1.13e+01, 5.66e+00, 4.66e+04]    []  \n",
      "16000 [2.99e-03]\n",
      "16000 [1.00e+00]\n",
      "\n",
      "Best model at step 16000:\n",
      "  train loss: 4.69e+04\n",
      "  test loss: 4.68e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.799577 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011336 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "16000     [2.57e+02, 5.58e-03, 1.13e+01, 5.66e+00, 4.66e+04]    [2.18e+02, 5.58e-03, 1.13e+01, 5.66e+00, 4.66e+04]    []  \n",
      "16000 [2.99e-03]\n",
      "16000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536032.946343      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "17000     [2.56e+02, 3.82e-03, 1.13e+01, 5.92e+00, 4.65e+04]    [2.26e+02, 3.82e-03, 1.13e+01, 5.92e+00, 4.65e+04]    []  \n",
      "17000 [3.08e-03]\n",
      "17000 [1.00e+00]\n",
      "\n",
      "Best model at step 17000:\n",
      "  train loss: 4.68e+04\n",
      "  test loss: 4.68e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.947817 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007809 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "17000     [2.56e+02, 3.82e-03, 1.13e+01, 5.92e+00, 4.65e+04]    [2.26e+02, 3.82e-03, 1.13e+01, 5.92e+00, 4.65e+04]    []  \n",
      "17000 [3.08e-03]\n",
      "17000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536079.679442      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "18000     [2.27e+02, 2.28e-03, 1.04e+01, 6.36e+00, 4.65e+04]    [2.00e+02, 2.28e-03, 1.04e+01, 6.36e+00, 4.65e+04]    []  \n",
      "18000 [3.10e-03]\n",
      "18000 [1.00e+00]\n",
      "\n",
      "Best model at step 18000:\n",
      "  train loss: 4.67e+04\n",
      "  test loss: 4.67e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.718287 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007886 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "18000     [2.27e+02, 2.28e-03, 1.04e+01, 6.36e+00, 4.65e+04]    [2.00e+02, 2.28e-03, 1.04e+01, 6.36e+00, 4.65e+04]    []  \n",
      "18000 [3.10e-03]\n",
      "18000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536126.490386      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "19000     [4.08e+02, 1.73e-03, 9.94e+00, 6.42e+00, 4.65e+04]    [4.10e+02, 1.73e-03, 9.94e+00, 6.42e+00, 4.65e+04]    []  \n",
      "19000 [3.46e-03]\n",
      "19000 [1.00e+00]\n",
      "\n",
      "Best model at step 18000:\n",
      "  train loss: 4.67e+04\n",
      "  test loss: 4.67e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.811739 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007885 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "19000     [4.08e+02, 1.73e-03, 9.94e+00, 6.42e+00, 4.65e+04]    [4.10e+02, 1.73e-03, 9.94e+00, 6.42e+00, 4.65e+04]    []  \n",
      "19000 [3.46e-03]\n",
      "19000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536173.183107      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "20000     [1.87e+02, 1.68e-03, 9.69e+00, 7.01e+00, 4.63e+04]    [1.86e+02, 1.68e-03, 9.69e+00, 7.01e+00, 4.63e+04]    []  \n",
      "20000 [3.69e-03]\n",
      "20000 [1.00e+00]\n",
      "\n",
      "Best model at step 20000:\n",
      "  train loss: 4.66e+04\n",
      "  test loss: 4.66e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.677440 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007670 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "20000     [1.87e+02, 1.68e-03, 9.69e+00, 7.01e+00, 4.63e+04]    [1.86e+02, 1.68e-03, 9.69e+00, 7.01e+00, 4.63e+04]    []  \n",
      "20000 [3.69e-03]\n",
      "20000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536219.955264      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "21000     [1.75e+02, 1.35e-03, 9.33e+00, 7.38e+00, 4.63e+04]    [1.80e+02, 1.35e-03, 9.33e+00, 7.38e+00, 4.63e+04]    []  \n",
      "21000 [3.81e-03]\n",
      "21000 [1.00e+00]\n",
      "\n",
      "Best model at step 21000:\n",
      "  train loss: 4.65e+04\n",
      "  test loss: 4.65e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.752850 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011243 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "21000     [1.75e+02, 1.35e-03, 9.33e+00, 7.38e+00, 4.63e+04]    [1.80e+02, 1.35e-03, 9.33e+00, 7.38e+00, 4.63e+04]    []  \n",
      "21000 [3.81e-03]\n",
      "21000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536267.847388      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "22000     [1.68e+02, 8.72e-04, 8.80e+00, 7.72e+00, 4.62e+04]    [1.78e+02, 8.72e-04, 8.80e+00, 7.72e+00, 4.62e+04]    []  \n",
      "22000 [3.87e-03]\n",
      "22000 [1.00e+00]\n",
      "\n",
      "Best model at step 22000:\n",
      "  train loss: 4.64e+04\n",
      "  test loss: 4.64e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.962125 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.012164 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "22000     [1.68e+02, 8.72e-04, 8.80e+00, 7.72e+00, 4.62e+04]    [1.78e+02, 8.72e-04, 8.80e+00, 7.72e+00, 4.62e+04]    []  \n",
      "22000 [3.87e-03]\n",
      "22000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536314.921444      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "23000     [7.28e+02, 2.88e-04, 8.31e+00, 8.02e+00, 4.61e+04]    [5.46e+02, 2.88e-04, 8.31e+00, 8.02e+00, 4.61e+04]    []  \n",
      "23000 [3.78e-03]\n",
      "23000 [1.00e+00]\n",
      "\n",
      "Best model at step 22000:\n",
      "  train loss: 4.64e+04\n",
      "  test loss: 4.64e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.069993 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008191 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "23000     [7.28e+02, 2.88e-04, 8.31e+00, 8.02e+00, 4.61e+04]    [5.46e+02, 2.88e-04, 8.31e+00, 8.02e+00, 4.61e+04]    []  \n",
      "23000 [3.78e-03]\n",
      "23000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536361.926950      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "24000     [1.70e+02, 1.72e-04, 8.22e+00, 8.36e+00, 4.61e+04]    [1.87e+02, 1.72e-04, 8.22e+00, 8.36e+00, 4.61e+04]    []  \n",
      "24000 [4.06e-03]\n",
      "24000 [1.00e+00]\n",
      "\n",
      "Best model at step 24000:\n",
      "  train loss: 4.63e+04\n",
      "  test loss: 4.63e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.964640 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008091 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "24000     [1.70e+02, 1.72e-04, 8.22e+00, 8.36e+00, 4.61e+04]    [1.87e+02, 1.72e-04, 8.22e+00, 8.36e+00, 4.61e+04]    []  \n",
      "24000 [4.06e-03]\n",
      "24000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536408.769624      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "25000     [1.68e+02, 2.19e-04, 8.07e+00, 8.58e+00, 4.61e+04]    [1.89e+02, 2.19e-04, 8.07e+00, 8.58e+00, 4.61e+04]    []  \n",
      "25000 [4.04e-03]\n",
      "25000 [1.00e+00]\n",
      "\n",
      "Best model at step 25000:\n",
      "  train loss: 4.62e+04\n",
      "  test loss: 4.63e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.823175 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.009305 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "25000     [1.68e+02, 2.19e-04, 8.07e+00, 8.58e+00, 4.61e+04]    [1.89e+02, 2.19e-04, 8.07e+00, 8.58e+00, 4.61e+04]    []  \n",
      "25000 [4.04e-03]\n",
      "25000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536455.538847      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "26000     [1.68e+02, 3.47e-04, 7.72e+00, 8.76e+00, 4.60e+04]    [1.88e+02, 3.47e-04, 7.72e+00, 8.76e+00, 4.60e+04]    []  \n",
      "26000 [4.05e-03]\n",
      "26000 [1.00e+00]\n",
      "\n",
      "Best model at step 26000:\n",
      "  train loss: 4.62e+04\n",
      "  test loss: 4.62e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.712316 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007856 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "26000     [1.68e+02, 3.47e-04, 7.72e+00, 8.76e+00, 4.60e+04]    [1.88e+02, 3.47e-04, 7.72e+00, 8.76e+00, 4.60e+04]    []  \n",
      "26000 [4.05e-03]\n",
      "26000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536502.365786      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "27000     [4.02e+02, 5.26e-04, 7.73e+00, 8.85e+00, 4.60e+04]    [3.47e+02, 5.26e-04, 7.73e+00, 8.85e+00, 4.60e+04]    []  \n",
      "27000 [4.16e-03]\n",
      "27000 [1.00e+00]\n",
      "\n",
      "Best model at step 26000:\n",
      "  train loss: 4.62e+04\n",
      "  test loss: 4.62e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.796240 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011547 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "27000     [4.02e+02, 5.26e-04, 7.73e+00, 8.85e+00, 4.60e+04]    [3.47e+02, 5.26e-04, 7.73e+00, 8.85e+00, 4.60e+04]    []  \n",
      "27000 [4.16e-03]\n",
      "27000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536549.110391      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "28000     [2.10e+02, 1.02e-03, 7.56e+00, 9.02e+00, 4.60e+04]    [2.16e+02, 1.02e-03, 7.56e+00, 9.02e+00, 4.60e+04]    []  \n",
      "28000 [4.16e-03]\n",
      "28000 [1.00e+00]\n",
      "\n",
      "Best model at step 26000:\n",
      "  train loss: 4.62e+04\n",
      "  test loss: 4.62e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.781585 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007748 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "28000     [2.10e+02, 1.02e-03, 7.56e+00, 9.02e+00, 4.60e+04]    [2.16e+02, 1.02e-03, 7.56e+00, 9.02e+00, 4.60e+04]    []  \n",
      "28000 [4.16e-03]\n",
      "28000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536595.965386      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "29000     [4.33e+02, 1.59e-03, 7.64e+00, 9.19e+00, 4.60e+04]    [3.54e+02, 1.59e-03, 7.64e+00, 9.19e+00, 4.60e+04]    []  \n",
      "29000 [4.18e-03]\n",
      "29000 [1.00e+00]\n",
      "\n",
      "Best model at step 26000:\n",
      "  train loss: 4.62e+04\n",
      "  test loss: 4.62e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.807518 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007606 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "29000     [4.33e+02, 1.59e-03, 7.64e+00, 9.19e+00, 4.60e+04]    [3.54e+02, 1.59e-03, 7.64e+00, 9.19e+00, 4.60e+04]    []  \n",
      "29000 [4.18e-03]\n",
      "29000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536642.728801      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "30000     [2.03e+02, 2.31e-03, 7.51e+00, 9.34e+00, 4.59e+04]    [1.87e+02, 2.31e-03, 7.51e+00, 9.34e+00, 4.59e+04]    []  \n",
      "30000 [4.19e-03]\n",
      "30000 [1.00e+00]\n",
      "\n",
      "Best model at step 30000:\n",
      "  train loss: 4.62e+04\n",
      "  test loss: 4.61e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.744166 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008350 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "30000     [2.03e+02, 2.31e-03, 7.51e+00, 9.34e+00, 4.59e+04]    [1.87e+02, 2.31e-03, 7.51e+00, 9.34e+00, 4.59e+04]    []  \n",
      "30000 [4.19e-03]\n",
      "30000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536690.423192      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "31000     [2.60e+02, 2.54e-03, 7.82e+00, 9.48e+00, 4.59e+04]    [2.32e+02, 2.54e-03, 7.82e+00, 9.48e+00, 4.59e+04]    []  \n",
      "31000 [4.30e-03]\n",
      "31000 [1.00e+00]\n",
      "\n",
      "Best model at step 30000:\n",
      "  train loss: 4.62e+04\n",
      "  test loss: 4.61e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.691566 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007789 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "31000     [2.60e+02, 2.54e-03, 7.82e+00, 9.48e+00, 4.59e+04]    [2.32e+02, 2.54e-03, 7.82e+00, 9.48e+00, 4.59e+04]    []  \n",
      "31000 [4.30e-03]\n",
      "31000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536737.231263      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "32000     [1.40e+02, 2.78e-03, 7.72e+00, 9.63e+00, 4.59e+04]    [1.59e+02, 2.78e-03, 7.72e+00, 9.63e+00, 4.59e+04]    []  \n",
      "32000 [4.39e-03]\n",
      "32000 [1.00e+00]\n",
      "\n",
      "Best model at step 32000:\n",
      "  train loss: 4.61e+04\n",
      "  test loss: 4.61e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.827480 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007840 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "32000     [1.40e+02, 2.78e-03, 7.72e+00, 9.63e+00, 4.59e+04]    [1.59e+02, 2.78e-03, 7.72e+00, 9.63e+00, 4.59e+04]    []  \n",
      "32000 [4.39e-03]\n",
      "32000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536784.052572      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "33000     [5.38e+02, 3.50e-03, 7.73e+00, 9.79e+00, 4.59e+04]    [3.67e+02, 3.50e-03, 7.73e+00, 9.79e+00, 4.59e+04]    []  \n",
      "33000 [4.27e-03]\n",
      "33000 [1.00e+00]\n",
      "\n",
      "Best model at step 32000:\n",
      "  train loss: 4.61e+04\n",
      "  test loss: 4.61e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.807402 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007963 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "33000     [5.38e+02, 3.50e-03, 7.73e+00, 9.79e+00, 4.59e+04]    [3.67e+02, 3.50e-03, 7.73e+00, 9.79e+00, 4.59e+04]    []  \n",
      "33000 [4.27e-03]\n",
      "33000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536830.883209      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "34000     [1.37e+02, 3.41e-03, 7.79e+00, 9.87e+00, 4.59e+04]    [1.55e+02, 3.41e-03, 7.79e+00, 9.87e+00, 4.59e+04]    []  \n",
      "34000 [4.41e-03]\n",
      "34000 [1.00e+00]\n",
      "\n",
      "Best model at step 34000:\n",
      "  train loss: 4.60e+04\n",
      "  test loss: 4.61e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.839654 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007795 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "34000     [1.37e+02, 3.41e-03, 7.79e+00, 9.87e+00, 4.59e+04]    [1.55e+02, 3.41e-03, 7.79e+00, 9.87e+00, 4.59e+04]    []  \n",
      "34000 [4.41e-03]\n",
      "34000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536877.733482      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "35000     [1.35e+02, 4.13e-03, 7.83e+00, 9.91e+00, 4.59e+04]    [1.55e+02, 4.13e-03, 7.83e+00, 9.91e+00, 4.59e+04]    []  \n",
      "35000 [4.43e-03]\n",
      "35000 [1.00e+00]\n",
      "\n",
      "Best model at step 35000:\n",
      "  train loss: 4.60e+04\n",
      "  test loss: 4.61e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.843461 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007713 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "35000     [1.35e+02, 4.13e-03, 7.83e+00, 9.91e+00, 4.59e+04]    [1.55e+02, 4.13e-03, 7.83e+00, 9.91e+00, 4.59e+04]    []  \n",
      "35000 [4.43e-03]\n",
      "35000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536924.568328      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "36000     [1.35e+02, 3.77e-03, 7.96e+00, 1.01e+01, 4.59e+04]    [1.54e+02, 3.77e-03, 7.96e+00, 1.01e+01, 4.59e+04]    []  \n",
      "36000 [4.56e-03]\n",
      "36000 [1.00e+00]\n",
      "\n",
      "Best model at step 36000:\n",
      "  train loss: 4.60e+04\n",
      "  test loss: 4.60e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.797061 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007660 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "36000     [1.35e+02, 3.77e-03, 7.96e+00, 1.01e+01, 4.59e+04]    [1.54e+02, 3.77e-03, 7.96e+00, 1.01e+01, 4.59e+04]    []  \n",
      "36000 [4.56e-03]\n",
      "36000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724536971.432785      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "37000     [1.38e+02, 3.14e-03, 7.79e+00, 1.01e+01, 4.59e+04]    [1.57e+02, 3.14e-03, 7.79e+00, 1.01e+01, 4.59e+04]    []  \n",
      "37000 [4.48e-03]\n",
      "37000 [1.00e+00]\n",
      "\n",
      "Best model at step 37000:\n",
      "  train loss: 4.60e+04\n",
      "  test loss: 4.60e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.872358 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007863 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "37000     [1.38e+02, 3.14e-03, 7.79e+00, 1.01e+01, 4.59e+04]    [1.57e+02, 3.14e-03, 7.79e+00, 1.01e+01, 4.59e+04]    []  \n",
      "37000 [4.48e-03]\n",
      "37000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537018.142159      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "38000     [1.55e+02, 3.95e-03, 7.68e+00, 1.00e+01, 4.59e+04]    [1.65e+02, 3.95e-03, 7.68e+00, 1.00e+01, 4.59e+04]    []  \n",
      "38000 [4.59e-03]\n",
      "38000 [1.00e+00]\n",
      "\n",
      "Best model at step 37000:\n",
      "  train loss: 4.60e+04\n",
      "  test loss: 4.60e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.704993 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007716 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "38000     [1.55e+02, 3.95e-03, 7.68e+00, 1.00e+01, 4.59e+04]    [1.65e+02, 3.95e-03, 7.68e+00, 1.00e+01, 4.59e+04]    []  \n",
      "38000 [4.59e-03]\n",
      "38000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537064.939243      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "39000     [1.39e+02, 4.12e-03, 7.85e+00, 1.03e+01, 4.58e+04]    [1.59e+02, 4.12e-03, 7.85e+00, 1.03e+01, 4.58e+04]    []  \n",
      "39000 [4.49e-03]\n",
      "39000 [1.00e+00]\n",
      "\n",
      "Best model at step 39000:\n",
      "  train loss: 4.60e+04\n",
      "  test loss: 4.60e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.815558 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007674 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "39000     [1.39e+02, 4.12e-03, 7.85e+00, 1.03e+01, 4.58e+04]    [1.59e+02, 4.12e-03, 7.85e+00, 1.03e+01, 4.58e+04]    []  \n",
      "39000 [4.49e-03]\n",
      "39000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537111.779948      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "40000     [1.61e+02, 5.21e-03, 7.81e+00, 9.65e+00, 4.59e+04]    [1.66e+02, 5.21e-03, 7.81e+00, 9.65e+00, 4.59e+04]    []  \n",
      "40000 [4.60e-03]\n",
      "40000 [1.00e+00]\n",
      "\n",
      "Best model at step 39000:\n",
      "  train loss: 4.60e+04\n",
      "  test loss: 4.60e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.811356 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008110 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "40000     [1.61e+02, 5.21e-03, 7.81e+00, 9.65e+00, 4.59e+04]    [1.66e+02, 5.21e-03, 7.81e+00, 9.65e+00, 4.59e+04]    []  \n",
      "40000 [4.60e-03]\n",
      "40000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537158.571899      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "41000     [1.33e+02, 5.50e-03, 7.87e+00, 1.03e+01, 4.58e+04]    [1.47e+02, 5.50e-03, 7.87e+00, 1.03e+01, 4.58e+04]    []  \n",
      "41000 [4.63e-03]\n",
      "41000 [1.00e+00]\n",
      "\n",
      "Best model at step 41000:\n",
      "  train loss: 4.60e+04\n",
      "  test loss: 4.60e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.843291 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008178 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "41000     [1.33e+02, 5.50e-03, 7.87e+00, 1.03e+01, 4.58e+04]    [1.47e+02, 5.50e-03, 7.87e+00, 1.03e+01, 4.58e+04]    []  \n",
      "41000 [4.63e-03]\n",
      "41000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537206.743612      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "42000     [3.34e+02, 5.81e-03, 8.12e+00, 1.02e+01, 4.58e+04]    [2.68e+02, 5.81e-03, 8.12e+00, 1.02e+01, 4.58e+04]    []  \n",
      "42000 [4.77e-03]\n",
      "42000 [1.00e+00]\n",
      "\n",
      "Best model at step 41000:\n",
      "  train loss: 4.60e+04\n",
      "  test loss: 4.60e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 48.175006 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007695 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "42000     [3.34e+02, 5.81e-03, 8.12e+00, 1.02e+01, 4.58e+04]    [2.68e+02, 5.81e-03, 8.12e+00, 1.02e+01, 4.58e+04]    []  \n",
      "42000 [4.77e-03]\n",
      "42000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537253.701849      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "43000     [1.32e+02, 6.95e-03, 8.01e+00, 1.03e+01, 4.58e+04]    [1.47e+02, 6.95e-03, 8.01e+00, 1.03e+01, 4.58e+04]    []  \n",
      "43000 [4.76e-03]\n",
      "43000 [1.00e+00]\n",
      "\n",
      "Best model at step 43000:\n",
      "  train loss: 4.59e+04\n",
      "  test loss: 4.59e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.892125 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007724 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "43000     [1.32e+02, 6.95e-03, 8.01e+00, 1.03e+01, 4.58e+04]    [1.47e+02, 6.95e-03, 8.01e+00, 1.03e+01, 4.58e+04]    []  \n",
      "43000 [4.76e-03]\n",
      "43000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537300.533619      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "44000     [1.41e+02, 8.19e-03, 8.17e+00, 1.03e+01, 4.57e+04]    [1.55e+02, 8.19e-03, 8.17e+00, 1.03e+01, 4.57e+04]    []  \n",
      "44000 [4.80e-03]\n",
      "44000 [1.00e+00]\n",
      "\n",
      "Best model at step 44000:\n",
      "  train loss: 4.59e+04\n",
      "  test loss: 4.59e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.844092 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007837 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "44000     [1.41e+02, 8.19e-03, 8.17e+00, 1.03e+01, 4.57e+04]    [1.55e+02, 8.19e-03, 8.17e+00, 1.03e+01, 4.57e+04]    []  \n",
      "44000 [4.80e-03]\n",
      "44000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537347.662987      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "45000     [2.16e+02, 8.93e-03, 7.98e+00, 9.96e+00, 4.57e+04]    [1.76e+02, 8.93e-03, 7.98e+00, 9.96e+00, 4.57e+04]    []  \n",
      "45000 [4.70e-03]\n",
      "45000 [1.00e+00]\n",
      "\n",
      "Best model at step 44000:\n",
      "  train loss: 4.59e+04\n",
      "  test loss: 4.59e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.150334 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007731 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "45000     [2.16e+02, 8.93e-03, 7.98e+00, 9.96e+00, 4.57e+04]    [1.76e+02, 8.93e-03, 7.98e+00, 9.96e+00, 4.57e+04]    []  \n",
      "45000 [4.70e-03]\n",
      "45000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537394.642981      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "46000     [1.60e+02, 8.34e-03, 7.98e+00, 9.74e+00, 4.56e+04]    [1.61e+02, 8.34e-03, 7.98e+00, 9.74e+00, 4.56e+04]    []  \n",
      "46000 [4.77e-03]\n",
      "46000 [1.00e+00]\n",
      "\n",
      "Best model at step 46000:\n",
      "  train loss: 4.58e+04\n",
      "  test loss: 4.58e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.956327 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007881 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "46000     [1.60e+02, 8.34e-03, 7.98e+00, 9.74e+00, 4.56e+04]    [1.61e+02, 8.34e-03, 7.98e+00, 9.74e+00, 4.56e+04]    []  \n",
      "46000 [4.77e-03]\n",
      "46000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537441.510864      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "47000     [2.51e+02, 7.17e-03, 7.64e+00, 9.19e+00, 4.54e+04]    [1.91e+02, 7.17e-03, 7.64e+00, 9.19e+00, 4.54e+04]    []  \n",
      "47000 [4.79e-03]\n",
      "47000 [1.00e+00]\n",
      "\n",
      "Best model at step 47000:\n",
      "  train loss: 4.57e+04\n",
      "  test loss: 4.56e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.980139 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007873 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "47000     [2.51e+02, 7.17e-03, 7.64e+00, 9.19e+00, 4.54e+04]    [1.91e+02, 7.17e-03, 7.64e+00, 9.19e+00, 4.54e+04]    []  \n",
      "47000 [4.79e-03]\n",
      "47000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537488.671851      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "48000     [4.49e+02, 6.01e-03, 7.58e+00, 8.83e+00, 4.51e+04]    [2.76e+02, 6.01e-03, 7.58e+00, 8.83e+00, 4.51e+04]    []  \n",
      "48000 [4.96e-03]\n",
      "48000 [1.00e+00]\n",
      "\n",
      "Best model at step 48000:\n",
      "  train loss: 4.56e+04\n",
      "  test loss: 4.54e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.255991 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008639 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "48000     [4.49e+02, 6.01e-03, 7.58e+00, 8.83e+00, 4.51e+04]    [2.76e+02, 6.01e-03, 7.58e+00, 8.83e+00, 4.51e+04]    []  \n",
      "48000 [4.96e-03]\n",
      "48000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537535.965806      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "49000     [2.21e+02, 8.42e-03, 7.93e+00, 9.35e+00, 4.51e+04]    [2.06e+02, 8.42e-03, 7.93e+00, 9.35e+00, 4.51e+04]    []  \n",
      "49000 [4.91e-03]\n",
      "49000 [1.00e+00]\n",
      "\n",
      "Best model at step 49000:\n",
      "  train loss: 4.53e+04\n",
      "  test loss: 4.53e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.282556 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007826 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "49000     [2.21e+02, 8.42e-03, 7.93e+00, 9.35e+00, 4.51e+04]    [2.06e+02, 8.42e-03, 7.93e+00, 9.35e+00, 4.51e+04]    []  \n",
      "49000 [4.91e-03]\n",
      "49000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537583.221320      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "50000     [3.24e+02, 7.59e-03, 7.95e+00, 9.04e+00, 4.48e+04]    [2.38e+02, 7.59e-03, 7.95e+00, 9.04e+00, 4.48e+04]    []  \n",
      "50000 [5.09e-03]\n",
      "50000 [1.00e+00]\n",
      "\n",
      "Best model at step 50000:\n",
      "  train loss: 4.52e+04\n",
      "  test loss: 4.51e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.256094 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008114 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "50000     [3.24e+02, 7.59e-03, 7.95e+00, 9.04e+00, 4.48e+04]    [2.38e+02, 7.59e-03, 7.95e+00, 9.04e+00, 4.48e+04]    []  \n",
      "50000 [5.09e-03]\n",
      "50000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537630.527227      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "51000     [3.95e+02, 7.34e-03, 8.22e+00, 9.04e+00, 4.46e+04]    [2.58e+02, 7.34e-03, 8.22e+00, 9.04e+00, 4.46e+04]    []  \n",
      "51000 [5.38e-03]\n",
      "51000 [1.00e+00]\n",
      "\n",
      "Best model at step 51000:\n",
      "  train loss: 4.50e+04\n",
      "  test loss: 4.49e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.292705 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.010616 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "51000     [3.95e+02, 7.34e-03, 8.22e+00, 9.04e+00, 4.46e+04]    [2.58e+02, 7.34e-03, 8.22e+00, 9.04e+00, 4.46e+04]    []  \n",
      "51000 [5.38e-03]\n",
      "51000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537677.879208      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "52000     [3.21e+02, 9.27e-03, 8.42e+00, 9.02e+00, 4.45e+04]    [2.49e+02, 9.27e-03, 8.42e+00, 9.02e+00, 4.45e+04]    []  \n",
      "52000 [5.57e-03]\n",
      "52000 [1.00e+00]\n",
      "\n",
      "Best model at step 52000:\n",
      "  train loss: 4.48e+04\n",
      "  test loss: 4.48e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.366175 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011720 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "52000     [3.21e+02, 9.27e-03, 8.42e+00, 9.02e+00, 4.45e+04]    [2.49e+02, 9.27e-03, 8.42e+00, 9.02e+00, 4.45e+04]    []  \n",
      "52000 [5.57e-03]\n",
      "52000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537725.207823      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "53000     [3.04e+02, 9.28e-03, 8.76e+00, 9.09e+00, 4.44e+04]    [2.38e+02, 9.28e-03, 8.76e+00, 9.09e+00, 4.44e+04]    []  \n",
      "53000 [5.79e-03]\n",
      "53000 [1.00e+00]\n",
      "\n",
      "Best model at step 53000:\n",
      "  train loss: 4.47e+04\n",
      "  test loss: 4.46e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.281149 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008307 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "53000     [3.04e+02, 9.28e-03, 8.76e+00, 9.09e+00, 4.44e+04]    [2.38e+02, 9.28e-03, 8.76e+00, 9.09e+00, 4.44e+04]    []  \n",
      "53000 [5.79e-03]\n",
      "53000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537772.526526      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "54000     [4.16e+02, 2.32e-02, 9.34e+00, 8.57e+00, 4.48e+04]    [3.98e+02, 2.32e-02, 9.34e+00, 8.57e+00, 4.48e+04]    []  \n",
      "54000 [5.64e-03]\n",
      "54000 [1.00e+00]\n",
      "\n",
      "Best model at step 53000:\n",
      "  train loss: 4.47e+04\n",
      "  test loss: 4.46e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.410744 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.010779 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "54000     [4.16e+02, 2.32e-02, 9.34e+00, 8.57e+00, 4.48e+04]    [3.98e+02, 2.32e-02, 9.34e+00, 8.57e+00, 4.48e+04]    []  \n",
      "54000 [5.64e-03]\n",
      "54000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537821.405950      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "55000     [4.01e+02, 8.60e-03, 9.53e+00, 9.03e+00, 4.42e+04]    [2.45e+02, 8.60e-03, 9.53e+00, 9.03e+00, 4.42e+04]    []  \n",
      "55000 [5.94e-03]\n",
      "55000 [1.00e+00]\n",
      "\n",
      "Best model at step 55000:\n",
      "  train loss: 4.46e+04\n",
      "  test loss: 4.44e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 48.861350 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007698 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "55000     [4.01e+02, 8.60e-03, 9.53e+00, 9.03e+00, 4.42e+04]    [2.45e+02, 8.60e-03, 9.53e+00, 9.03e+00, 4.42e+04]    []  \n",
      "55000 [5.94e-03]\n",
      "55000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537868.761189      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "56000     [4.14e+02, 2.28e-02, 9.62e+00, 8.86e+00, 4.43e+04]    [3.98e+02, 2.28e-02, 9.62e+00, 8.86e+00, 4.43e+04]    []  \n",
      "56000 [5.67e-03]\n",
      "56000 [1.00e+00]\n",
      "\n",
      "Best model at step 55000:\n",
      "  train loss: 4.46e+04\n",
      "  test loss: 4.44e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.269256 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007875 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "56000     [4.14e+02, 2.28e-02, 9.62e+00, 8.86e+00, 4.43e+04]    [3.98e+02, 2.28e-02, 9.62e+00, 8.86e+00, 4.43e+04]    []  \n",
      "56000 [5.67e-03]\n",
      "56000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537916.093745      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "57000     [6.73e+02, 6.42e-03, 1.02e+01, 8.95e+00, 4.40e+04]    [2.90e+02, 6.42e-03, 1.02e+01, 8.95e+00, 4.40e+04]    []  \n",
      "57000 [6.10e-03]\n",
      "57000 [1.00e+00]\n",
      "\n",
      "Best model at step 55000:\n",
      "  train loss: 4.46e+04\n",
      "  test loss: 4.44e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.327797 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007783 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "57000     [6.73e+02, 6.42e-03, 1.02e+01, 8.95e+00, 4.40e+04]    [2.90e+02, 6.42e-03, 1.02e+01, 8.95e+00, 4.40e+04]    []  \n",
      "57000 [6.10e-03]\n",
      "57000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724537963.382945      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "58000     [3.44e+02, 2.07e-02, 9.97e+00, 8.65e+00, 4.41e+04]    [2.78e+02, 2.07e-02, 9.97e+00, 8.65e+00, 4.41e+04]    []  \n",
      "58000 [5.50e-03]\n",
      "58000 [1.00e+00]\n",
      "\n",
      "Best model at step 58000:\n",
      "  train loss: 4.44e+04\n",
      "  test loss: 4.44e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.263182 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008277 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "58000     [3.44e+02, 2.07e-02, 9.97e+00, 8.65e+00, 4.41e+04]    [2.78e+02, 2.07e-02, 9.97e+00, 8.65e+00, 4.41e+04]    []  \n",
      "58000 [5.50e-03]\n",
      "58000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538010.664082      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "59000     [3.48e+02, 6.10e-03, 1.14e+01, 8.90e+00, 4.37e+04]    [2.31e+02, 6.10e-03, 1.14e+01, 8.90e+00, 4.37e+04]    []  \n",
      "59000 [5.36e-03]\n",
      "59000 [1.00e+00]\n",
      "\n",
      "Best model at step 59000:\n",
      "  train loss: 4.41e+04\n",
      "  test loss: 4.39e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.282855 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007814 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "59000     [3.48e+02, 6.10e-03, 1.14e+01, 8.90e+00, 4.37e+04]    [2.31e+02, 6.10e-03, 1.14e+01, 8.90e+00, 4.37e+04]    []  \n",
      "59000 [5.36e-03]\n",
      "59000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538057.924438      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "60000     [3.43e+02, 6.37e-03, 1.14e+01, 8.82e+00, 4.36e+04]    [2.45e+02, 6.37e-03, 1.14e+01, 8.82e+00, 4.36e+04]    []  \n",
      "60000 [5.57e-03]\n",
      "60000 [1.00e+00]\n",
      "\n",
      "Best model at step 60000:\n",
      "  train loss: 4.40e+04\n",
      "  test loss: 4.39e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.265367 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007894 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "60000     [3.43e+02, 6.37e-03, 1.14e+01, 8.82e+00, 4.36e+04]    [2.45e+02, 6.37e-03, 1.14e+01, 8.82e+00, 4.36e+04]    []  \n",
      "60000 [5.57e-03]\n",
      "60000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538105.201311      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "61000     [3.53e+02, 6.46e-03, 1.19e+01, 8.86e+00, 4.36e+04]    [2.46e+02, 6.46e-03, 1.19e+01, 8.86e+00, 4.36e+04]    []  \n",
      "61000 [5.45e-03]\n",
      "61000 [1.00e+00]\n",
      "\n",
      "Best model at step 61000:\n",
      "  train loss: 4.39e+04\n",
      "  test loss: 4.38e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.245477 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007788 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "61000     [3.53e+02, 6.46e-03, 1.19e+01, 8.86e+00, 4.36e+04]    [2.46e+02, 6.46e-03, 1.19e+01, 8.86e+00, 4.36e+04]    []  \n",
      "61000 [5.45e-03]\n",
      "61000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538152.565747      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "62000     [3.39e+02, 5.64e-03, 1.36e+01, 9.37e+00, 4.33e+04]    [2.39e+02, 5.64e-03, 1.36e+01, 9.37e+00, 4.33e+04]    []  \n",
      "62000 [5.98e-03]\n",
      "62000 [1.00e+00]\n",
      "\n",
      "Best model at step 62000:\n",
      "  train loss: 4.36e+04\n",
      "  test loss: 4.35e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.331602 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.010316 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "62000     [3.39e+02, 5.64e-03, 1.36e+01, 9.37e+00, 4.33e+04]    [2.39e+02, 5.64e-03, 1.36e+01, 9.37e+00, 4.33e+04]    []  \n",
      "62000 [5.98e-03]\n",
      "62000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538199.819623      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "63000     [5.06e+02, 6.07e-03, 1.25e+01, 8.11e+00, 4.40e+04]    [3.08e+02, 6.07e-03, 1.25e+01, 8.11e+00, 4.40e+04]    []  \n",
      "63000 [6.05e-03]\n",
      "63000 [1.00e+00]\n",
      "\n",
      "Best model at step 62000:\n",
      "  train loss: 4.36e+04\n",
      "  test loss: 4.35e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.251914 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007793 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "63000     [5.06e+02, 6.07e-03, 1.25e+01, 8.11e+00, 4.40e+04]    [3.08e+02, 6.07e-03, 1.25e+01, 8.11e+00, 4.40e+04]    []  \n",
      "63000 [6.05e-03]\n",
      "63000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538247.129135      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "64000     [7.32e+02, 8.80e-03, 1.59e+01, 8.99e+00, 4.30e+04]    [2.64e+02, 8.80e-03, 1.59e+01, 8.99e+00, 4.30e+04]    []  \n",
      "64000 [7.00e-03]\n",
      "64000 [1.00e+00]\n",
      "\n",
      "Best model at step 62000:\n",
      "  train loss: 4.36e+04\n",
      "  test loss: 4.35e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.295654 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008186 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "64000     [7.32e+02, 8.80e-03, 1.59e+01, 8.99e+00, 4.30e+04]    [2.64e+02, 8.80e-03, 1.59e+01, 8.99e+00, 4.30e+04]    []  \n",
      "64000 [7.00e-03]\n",
      "64000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538294.483901      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "65000     [3.53e+02, 9.60e-03, 1.73e+01, 9.45e+00, 4.28e+04]    [2.78e+02, 9.60e-03, 1.73e+01, 9.45e+00, 4.28e+04]    []  \n",
      "65000 [7.20e-03]\n",
      "65000 [1.00e+00]\n",
      "\n",
      "Best model at step 65000:\n",
      "  train loss: 4.31e+04\n",
      "  test loss: 4.31e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.419400 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.012095 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "65000     [3.53e+02, 9.60e-03, 1.73e+01, 9.45e+00, 4.28e+04]    [2.78e+02, 9.60e-03, 1.73e+01, 9.45e+00, 4.28e+04]    []  \n",
      "65000 [7.20e-03]\n",
      "65000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538341.889475      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "66000     [1.70e+03, 7.09e-03, 1.76e+01, 9.18e+00, 4.28e+04]    [3.13e+02, 7.09e-03, 1.76e+01, 9.18e+00, 4.28e+04]    []  \n",
      "66000 [7.79e-03]\n",
      "66000 [1.00e+00]\n",
      "\n",
      "Best model at step 65000:\n",
      "  train loss: 4.31e+04\n",
      "  test loss: 4.31e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.348094 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007971 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "66000     [1.70e+03, 7.09e-03, 1.76e+01, 9.18e+00, 4.28e+04]    [3.13e+02, 7.09e-03, 1.76e+01, 9.18e+00, 4.28e+04]    []  \n",
      "66000 [7.79e-03]\n",
      "66000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538389.229903      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "67000     [7.24e+02, 5.60e-03, 1.75e+01, 9.02e+00, 4.28e+04]    [3.56e+02, 5.60e-03, 1.75e+01, 9.02e+00, 4.28e+04]    []  \n",
      "67000 [7.56e-03]\n",
      "67000 [1.00e+00]\n",
      "\n",
      "Best model at step 65000:\n",
      "  train loss: 4.31e+04\n",
      "  test loss: 4.31e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.366941 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008123 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "67000     [7.24e+02, 5.60e-03, 1.75e+01, 9.02e+00, 4.28e+04]    [3.56e+02, 5.60e-03, 1.75e+01, 9.02e+00, 4.28e+04]    []  \n",
      "67000 [7.56e-03]\n",
      "67000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538436.623707      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "68000     [3.47e+02, 6.58e-03, 2.11e+01, 9.64e+00, 4.22e+04]    [2.65e+02, 6.58e-03, 2.11e+01, 9.64e+00, 4.22e+04]    []  \n",
      "68000 [8.66e-03]\n",
      "68000 [1.00e+00]\n",
      "\n",
      "Best model at step 68000:\n",
      "  train loss: 4.26e+04\n",
      "  test loss: 4.25e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.299343 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007959 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "68000     [3.47e+02, 6.58e-03, 2.11e+01, 9.64e+00, 4.22e+04]    [2.65e+02, 6.58e-03, 2.11e+01, 9.64e+00, 4.22e+04]    []  \n",
      "68000 [8.66e-03]\n",
      "68000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538483.907332      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "69000     [3.87e+02, 1.33e-02, 1.84e+01, 8.54e+00, 4.30e+04]    [2.92e+02, 1.33e-02, 1.84e+01, 8.54e+00, 4.30e+04]    []  \n",
      "69000 [9.10e-03]\n",
      "69000 [1.00e+00]\n",
      "\n",
      "Best model at step 68000:\n",
      "  train loss: 4.26e+04\n",
      "  test loss: 4.25e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.313113 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008118 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "69000     [3.87e+02, 1.33e-02, 1.84e+01, 8.54e+00, 4.30e+04]    [2.92e+02, 1.33e-02, 1.84e+01, 8.54e+00, 4.30e+04]    []  \n",
      "69000 [9.10e-03]\n",
      "69000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538531.253021      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "70000     [6.74e+02, 5.32e-03, 2.39e+01, 9.54e+00, 4.19e+04]    [2.60e+02, 5.32e-03, 2.39e+01, 9.54e+00, 4.19e+04]    []  \n",
      "70000 [1.01e-02]\n",
      "70000 [1.00e+00]\n",
      "\n",
      "Best model at step 68000:\n",
      "  train loss: 4.26e+04\n",
      "  test loss: 4.25e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.348903 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.012571 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "70000     [6.74e+02, 5.32e-03, 2.39e+01, 9.54e+00, 4.19e+04]    [2.60e+02, 5.32e-03, 2.39e+01, 9.54e+00, 4.19e+04]    []  \n",
      "70000 [1.01e-02]\n",
      "70000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538580.503039      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "71000     [4.35e+02, 3.33e-03, 1.95e+01, 8.71e+00, 4.24e+04]    [3.65e+02, 3.33e-03, 1.95e+01, 8.71e+00, 4.24e+04]    []  \n",
      "71000 [1.04e-02]\n",
      "71000 [1.00e+00]\n",
      "\n",
      "Best model at step 68000:\n",
      "  train loss: 4.26e+04\n",
      "  test loss: 4.25e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 49.219610 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011435 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "71000     [4.35e+02, 3.33e-03, 1.95e+01, 8.71e+00, 4.24e+04]    [3.65e+02, 3.33e-03, 1.95e+01, 8.71e+00, 4.24e+04]    []  \n",
      "71000 [1.04e-02]\n",
      "71000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538627.743985      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "72000     [1.54e+03, 3.82e-03, 2.78e+01, 1.01e+01, 4.14e+04]    [4.25e+02, 3.82e-03, 2.78e+01, 1.01e+01, 4.14e+04]    []  \n",
      "72000 [1.18e-02]\n",
      "72000 [1.00e+00]\n",
      "\n",
      "Best model at step 68000:\n",
      "  train loss: 4.26e+04\n",
      "  test loss: 4.25e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.208433 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007972 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "72000     [1.54e+03, 3.82e-03, 2.78e+01, 1.01e+01, 4.14e+04]    [4.25e+02, 3.82e-03, 2.78e+01, 1.01e+01, 4.14e+04]    []  \n",
      "72000 [1.18e-02]\n",
      "72000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538675.048032      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "73000     [6.87e+02, 3.93e-03, 2.90e+01, 1.05e+01, 4.10e+04]    [3.07e+02, 3.93e-03, 2.90e+01, 1.05e+01, 4.10e+04]    []  \n",
      "73000 [1.30e-02]\n",
      "73000 [1.00e+00]\n",
      "\n",
      "Best model at step 73000:\n",
      "  train loss: 4.17e+04\n",
      "  test loss: 4.14e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.259927 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007868 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "73000     [6.87e+02, 3.93e-03, 2.90e+01, 1.05e+01, 4.10e+04]    [3.07e+02, 3.93e-03, 2.90e+01, 1.05e+01, 4.10e+04]    []  \n",
      "73000 [1.30e-02]\n",
      "73000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538722.310102      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "74000     [4.48e+02, 1.03e-02, 2.40e+01, 8.97e+00, 4.19e+04]    [3.58e+02, 1.03e-02, 2.40e+01, 8.97e+00, 4.19e+04]    []  \n",
      "74000 [1.32e-02]\n",
      "74000 [1.00e+00]\n",
      "\n",
      "Best model at step 73000:\n",
      "  train loss: 4.17e+04\n",
      "  test loss: 4.14e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.286196 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007912 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "74000     [4.48e+02, 1.03e-02, 2.40e+01, 8.97e+00, 4.19e+04]    [3.58e+02, 1.03e-02, 2.40e+01, 8.97e+00, 4.19e+04]    []  \n",
      "74000 [1.32e-02]\n",
      "74000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538769.547221      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "75000     [4.92e+02, 5.41e-03, 3.09e+01, 1.07e+01, 4.07e+04]    [3.17e+02, 5.41e-03, 3.09e+01, 1.07e+01, 4.07e+04]    []  \n",
      "75000 [1.50e-02]\n",
      "75000 [1.00e+00]\n",
      "\n",
      "Best model at step 75000:\n",
      "  train loss: 4.13e+04\n",
      "  test loss: 4.11e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.289077 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007873 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "75000     [4.92e+02, 5.41e-03, 3.09e+01, 1.07e+01, 4.07e+04]    [3.17e+02, 5.41e-03, 3.09e+01, 1.07e+01, 4.07e+04]    []  \n",
      "75000 [1.50e-02]\n",
      "75000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538816.940738      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "76000     [4.61e+02, 1.42e-02, 2.64e+01, 9.90e+00, 4.12e+04]    [3.49e+02, 1.42e-02, 2.64e+01, 9.90e+00, 4.12e+04]    []  \n",
      "76000 [1.50e-02]\n",
      "76000 [1.00e+00]\n",
      "\n",
      "Best model at step 75000:\n",
      "  train loss: 4.13e+04\n",
      "  test loss: 4.11e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.431878 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007704 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "76000     [4.61e+02, 1.42e-02, 2.64e+01, 9.90e+00, 4.12e+04]    [3.49e+02, 1.42e-02, 2.64e+01, 9.90e+00, 4.12e+04]    []  \n",
      "76000 [1.50e-02]\n",
      "76000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538864.305205      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "77000     [4.79e+02, 1.04e-02, 2.85e+01, 1.07e+01, 4.06e+04]    [3.50e+02, 1.04e-02, 2.85e+01, 1.07e+01, 4.06e+04]    []  \n",
      "77000 [1.58e-02]\n",
      "77000 [1.00e+00]\n",
      "\n",
      "Best model at step 77000:\n",
      "  train loss: 4.11e+04\n",
      "  test loss: 4.10e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.297239 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008271 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "77000     [4.79e+02, 1.04e-02, 2.85e+01, 1.07e+01, 4.06e+04]    [3.50e+02, 1.04e-02, 2.85e+01, 1.07e+01, 4.06e+04]    []  \n",
      "77000 [1.58e-02]\n",
      "77000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538911.591945      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "78000     [4.44e+02, 1.02e-02, 3.76e+01, 1.14e+01, 4.02e+04]    [2.71e+02, 1.02e-02, 3.76e+01, 1.14e+01, 4.02e+04]    []  \n",
      "78000 [1.71e-02]\n",
      "78000 [1.00e+00]\n",
      "\n",
      "Best model at step 78000:\n",
      "  train loss: 4.07e+04\n",
      "  test loss: 4.05e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.241958 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008142 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "78000     [4.44e+02, 1.02e-02, 3.76e+01, 1.14e+01, 4.02e+04]    [2.71e+02, 1.02e-02, 3.76e+01, 1.14e+01, 4.02e+04]    []  \n",
      "78000 [1.71e-02]\n",
      "78000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724538958.925161      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "79000     [8.13e+02, 1.23e-02, 3.89e+01, 1.17e+01, 4.00e+04]    [3.10e+02, 1.23e-02, 3.89e+01, 1.17e+01, 4.00e+04]    []  \n",
      "79000 [1.84e-02]\n",
      "79000 [1.00e+00]\n",
      "\n",
      "Best model at step 78000:\n",
      "  train loss: 4.07e+04\n",
      "  test loss: 4.05e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.349871 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007950 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "79000     [8.13e+02, 1.23e-02, 3.89e+01, 1.17e+01, 4.00e+04]    [3.10e+02, 1.23e-02, 3.89e+01, 1.17e+01, 4.00e+04]    []  \n",
      "79000 [1.84e-02]\n",
      "79000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539006.255227      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "80000     [5.04e+02, 1.94e-02, 4.04e+01, 1.19e+01, 3.99e+04]    [2.97e+02, 1.94e-02, 4.04e+01, 1.19e+01, 3.99e+04]    []  \n",
      "80000 [1.92e-02]\n",
      "80000 [1.00e+00]\n",
      "\n",
      "Best model at step 80000:\n",
      "  train loss: 4.04e+04\n",
      "  test loss: 4.02e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.383358 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.012211 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "80000     [5.04e+02, 1.94e-02, 4.04e+01, 1.19e+01, 3.99e+04]    [2.97e+02, 1.94e-02, 4.04e+01, 1.19e+01, 3.99e+04]    []  \n",
      "80000 [1.92e-02]\n",
      "80000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539053.665288      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "81000     [3.98e+02, 3.43e-02, 2.97e+01, 8.26e+00, 4.20e+04]    [3.70e+02, 3.43e-02, 2.97e+01, 8.26e+00, 4.20e+04]    []  \n",
      "81000 [1.81e-02]\n",
      "81000 [1.00e+00]\n",
      "\n",
      "Best model at step 80000:\n",
      "  train loss: 4.04e+04\n",
      "  test loss: 4.02e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.344145 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.012661 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "81000     [3.98e+02, 3.43e-02, 2.97e+01, 8.26e+00, 4.20e+04]    [3.70e+02, 3.43e-02, 2.97e+01, 8.26e+00, 4.20e+04]    []  \n",
      "81000 [1.81e-02]\n",
      "81000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539101.036080      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "82000     [6.67e+02, 1.95e-02, 4.11e+01, 1.20e+01, 3.97e+04]    [2.85e+02, 1.95e-02, 4.11e+01, 1.20e+01, 3.97e+04]    []  \n",
      "82000 [2.06e-02]\n",
      "82000 [1.00e+00]\n",
      "\n",
      "Best model at step 80000:\n",
      "  train loss: 4.04e+04\n",
      "  test loss: 4.02e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.338745 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007838 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "82000     [6.67e+02, 1.95e-02, 4.11e+01, 1.20e+01, 3.97e+04]    [2.85e+02, 1.95e-02, 4.11e+01, 1.20e+01, 3.97e+04]    []  \n",
      "82000 [2.06e-02]\n",
      "82000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539148.429457      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "83000     [4.67e+02, 2.27e-02, 3.31e+01, 1.19e+01, 3.98e+04]    [3.69e+02, 2.27e-02, 3.31e+01, 1.19e+01, 3.98e+04]    []  \n",
      "83000 [2.05e-02]\n",
      "83000 [1.00e+00]\n",
      "\n",
      "Best model at step 83000:\n",
      "  train loss: 4.03e+04\n",
      "  test loss: 4.02e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.380150 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011514 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "83000     [4.67e+02, 2.27e-02, 3.31e+01, 1.19e+01, 3.98e+04]    [3.69e+02, 2.27e-02, 3.31e+01, 1.19e+01, 3.98e+04]    []  \n",
      "83000 [2.05e-02]\n",
      "83000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539195.798969      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "84000     [4.77e+02, 2.59e-02, 4.20e+01, 1.18e+01, 3.97e+04]    [3.54e+02, 2.59e-02, 4.20e+01, 1.18e+01, 3.97e+04]    []  \n",
      "84000 [1.98e-02]\n",
      "84000 [1.00e+00]\n",
      "\n",
      "Best model at step 84000:\n",
      "  train loss: 4.03e+04\n",
      "  test loss: 4.01e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.340156 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.010622 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "84000     [4.77e+02, 2.59e-02, 4.20e+01, 1.18e+01, 3.97e+04]    [3.54e+02, 2.59e-02, 4.20e+01, 1.18e+01, 3.97e+04]    []  \n",
      "84000 [1.98e-02]\n",
      "84000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539243.072649      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "85000     [6.80e+02, 2.20e-02, 4.45e+01, 1.23e+01, 3.94e+04]    [3.22e+02, 2.20e-02, 4.45e+01, 1.23e+01, 3.94e+04]    []  \n",
      "85000 [2.13e-02]\n",
      "85000 [1.00e+00]\n",
      "\n",
      "Best model at step 85000:\n",
      "  train loss: 4.02e+04\n",
      "  test loss: 3.98e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.265974 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008042 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "85000     [6.80e+02, 2.20e-02, 4.45e+01, 1.23e+01, 3.94e+04]    [3.22e+02, 2.20e-02, 4.45e+01, 1.23e+01, 3.94e+04]    []  \n",
      "85000 [2.13e-02]\n",
      "85000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539290.498139      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "86000     [6.11e+02, 2.45e-02, 4.55e+01, 1.26e+01, 3.93e+04]    [2.94e+02, 2.45e-02, 4.55e+01, 1.26e+01, 3.93e+04]    []  \n",
      "86000 [2.17e-02]\n",
      "86000 [1.00e+00]\n",
      "\n",
      "Best model at step 86000:\n",
      "  train loss: 3.99e+04\n",
      "  test loss: 3.96e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.434552 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008117 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "86000     [6.11e+02, 2.45e-02, 4.55e+01, 1.26e+01, 3.93e+04]    [2.94e+02, 2.45e-02, 4.55e+01, 1.26e+01, 3.93e+04]    []  \n",
      "86000 [2.17e-02]\n",
      "86000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539337.872362      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "87000     [1.45e+03, 2.34e-02, 4.74e+01, 1.26e+01, 3.92e+04]    [3.13e+02, 2.34e-02, 4.74e+01, 1.26e+01, 3.92e+04]    []  \n",
      "87000 [2.20e-02]\n",
      "87000 [1.00e+00]\n",
      "\n",
      "Best model at step 86000:\n",
      "  train loss: 3.99e+04\n",
      "  test loss: 3.96e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.356281 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011836 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "87000     [1.45e+03, 2.34e-02, 4.74e+01, 1.26e+01, 3.92e+04]    [3.13e+02, 2.34e-02, 4.74e+01, 1.26e+01, 3.92e+04]    []  \n",
      "87000 [2.20e-02]\n",
      "87000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539385.267843      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "88000     [3.86e+02, 4.43e-02, 3.59e+01, 8.92e+00, 4.14e+04]    [3.54e+02, 4.43e-02, 3.59e+01, 8.92e+00, 4.14e+04]    []  \n",
      "88000 [2.08e-02]\n",
      "88000 [1.00e+00]\n",
      "\n",
      "Best model at step 86000:\n",
      "  train loss: 3.99e+04\n",
      "  test loss: 3.96e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.335579 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007664 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "88000     [3.86e+02, 4.43e-02, 3.59e+01, 8.92e+00, 4.14e+04]    [3.54e+02, 4.43e-02, 3.59e+01, 8.92e+00, 4.14e+04]    []  \n",
      "88000 [2.08e-02]\n",
      "88000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539432.573727      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "89000     [9.68e+02, 2.17e-02, 4.81e+01, 1.27e+01, 3.90e+04]    [2.94e+02, 2.17e-02, 4.81e+01, 1.27e+01, 3.90e+04]    []  \n",
      "89000 [2.21e-02]\n",
      "89000 [1.00e+00]\n",
      "\n",
      "Best model at step 86000:\n",
      "  train loss: 3.99e+04\n",
      "  test loss: 3.96e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.272750 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007880 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "89000     [9.68e+02, 2.17e-02, 4.81e+01, 1.27e+01, 3.90e+04]    [2.94e+02, 2.17e-02, 4.81e+01, 1.27e+01, 3.90e+04]    []  \n",
      "89000 [2.21e-02]\n",
      "89000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539479.851443      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "90000     [4.93e+02, 2.37e-02, 4.95e+01, 1.30e+01, 3.89e+04]    [2.82e+02, 2.37e-02, 4.95e+01, 1.30e+01, 3.89e+04]    []  \n",
      "90000 [2.23e-02]\n",
      "90000 [1.00e+00]\n",
      "\n",
      "Best model at step 90000:\n",
      "  train loss: 3.95e+04\n",
      "  test loss: 3.92e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.322519 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007999 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "90000     [4.93e+02, 2.37e-02, 4.95e+01, 1.30e+01, 3.89e+04]    [2.82e+02, 2.37e-02, 4.95e+01, 1.30e+01, 3.89e+04]    []  \n",
      "90000 [2.23e-02]\n",
      "90000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539529.536939      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "91000     [5.03e+02, 2.45e-02, 5.08e+01, 1.31e+01, 3.88e+04]    [2.77e+02, 2.45e-02, 5.08e+01, 1.31e+01, 3.88e+04]    []  \n",
      "91000 [2.26e-02]\n",
      "91000 [1.00e+00]\n",
      "\n",
      "Best model at step 91000:\n",
      "  train loss: 3.94e+04\n",
      "  test loss: 3.92e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 49.668319 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011745 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "91000     [5.03e+02, 2.45e-02, 5.08e+01, 1.31e+01, 3.88e+04]    [2.77e+02, 2.45e-02, 5.08e+01, 1.31e+01, 3.88e+04]    []  \n",
      "91000 [2.26e-02]\n",
      "91000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539576.864500      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "92000     [4.12e+02, 3.91e-02, 3.69e+01, 8.39e+00, 4.16e+04]    [4.12e+02, 3.91e-02, 3.69e+01, 8.39e+00, 4.16e+04]    []  \n",
      "92000 [2.17e-02]\n",
      "92000 [1.00e+00]\n",
      "\n",
      "Best model at step 91000:\n",
      "  train loss: 3.94e+04\n",
      "  test loss: 3.92e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.306197 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007777 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "92000     [4.12e+02, 3.91e-02, 3.69e+01, 8.39e+00, 4.16e+04]    [4.12e+02, 3.91e-02, 3.69e+01, 8.39e+00, 4.16e+04]    []  \n",
      "92000 [2.17e-02]\n",
      "92000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539624.160465      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "93000     [8.09e+02, 2.10e-02, 4.71e+01, 1.21e+01, 3.92e+04]    [2.76e+02, 2.10e-02, 4.71e+01, 1.21e+01, 3.92e+04]    []  \n",
      "93000 [2.25e-02]\n",
      "93000 [1.00e+00]\n",
      "\n",
      "Best model at step 91000:\n",
      "  train loss: 3.94e+04\n",
      "  test loss: 3.92e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.303479 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007742 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "93000     [8.09e+02, 2.10e-02, 4.71e+01, 1.21e+01, 3.92e+04]    [2.76e+02, 2.10e-02, 4.71e+01, 1.21e+01, 3.92e+04]    []  \n",
      "93000 [2.25e-02]\n",
      "93000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539671.498235      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "94000     [4.66e+02, 1.76e-02, 4.40e+01, 1.13e+01, 3.97e+04]    [3.30e+02, 1.76e-02, 4.40e+01, 1.13e+01, 3.97e+04]    []  \n",
      "94000 [2.13e-02]\n",
      "94000 [1.00e+00]\n",
      "\n",
      "Best model at step 91000:\n",
      "  train loss: 3.94e+04\n",
      "  test loss: 3.92e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.340444 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007865 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "94000     [4.66e+02, 1.76e-02, 4.40e+01, 1.13e+01, 3.97e+04]    [3.30e+02, 1.76e-02, 4.40e+01, 1.13e+01, 3.97e+04]    []  \n",
      "94000 [2.13e-02]\n",
      "94000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539718.783618      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "95000     [4.28e+02, 4.00e-02, 4.28e+01, 1.32e+01, 3.88e+04]    [3.13e+02, 4.00e-02, 4.28e+01, 1.32e+01, 3.88e+04]    []  \n",
      "95000 [2.18e-02]\n",
      "95000 [1.00e+00]\n",
      "\n",
      "Best model at step 95000:\n",
      "  train loss: 3.93e+04\n",
      "  test loss: 3.92e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.263884 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007653 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "95000     [4.28e+02, 4.00e-02, 4.28e+01, 1.32e+01, 3.88e+04]    [3.13e+02, 4.00e-02, 4.28e+01, 1.32e+01, 3.88e+04]    []  \n",
      "95000 [2.18e-02]\n",
      "95000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539766.111760      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "96000     [5.83e+02, 2.34e-02, 5.24e+01, 1.30e+01, 3.87e+04]    [2.78e+02, 2.34e-02, 5.24e+01, 1.30e+01, 3.87e+04]    []  \n",
      "96000 [2.24e-02]\n",
      "96000 [1.00e+00]\n",
      "\n",
      "Best model at step 95000:\n",
      "  train loss: 3.93e+04\n",
      "  test loss: 3.92e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.307293 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007745 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "96000     [5.83e+02, 2.34e-02, 5.24e+01, 1.30e+01, 3.87e+04]    [2.78e+02, 2.34e-02, 5.24e+01, 1.30e+01, 3.87e+04]    []  \n",
      "96000 [2.24e-02]\n",
      "96000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539813.333542      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "97000     [2.04e+03, 1.95e-02, 5.32e+01, 1.31e+01, 3.86e+04]    [3.07e+02, 1.95e-02, 5.32e+01, 1.31e+01, 3.86e+04]    []  \n",
      "97000 [2.23e-02]\n",
      "97000 [1.00e+00]\n",
      "\n",
      "Best model at step 95000:\n",
      "  train loss: 3.93e+04\n",
      "  test loss: 3.92e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.226537 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007877 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "97000     [2.04e+03, 1.95e-02, 5.32e+01, 1.31e+01, 3.86e+04]    [3.07e+02, 1.95e-02, 5.32e+01, 1.31e+01, 3.86e+04]    []  \n",
      "97000 [2.23e-02]\n",
      "97000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539860.684874      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "98000     [5.44e+02, 3.17e-02, 5.36e+01, 1.34e+01, 3.85e+04]    [2.86e+02, 3.17e-02, 5.36e+01, 1.34e+01, 3.85e+04]    []  \n",
      "98000 [2.24e-02]\n",
      "98000 [1.00e+00]\n",
      "\n",
      "Best model at step 98000:\n",
      "  train loss: 3.91e+04\n",
      "  test loss: 3.88e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.321942 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008177 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "98000     [5.44e+02, 3.17e-02, 5.36e+01, 1.34e+01, 3.85e+04]    [2.86e+02, 3.17e-02, 5.36e+01, 1.34e+01, 3.85e+04]    []  \n",
      "98000 [2.24e-02]\n",
      "98000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539907.921162      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "99000     [4.75e+02, 3.24e-02, 4.74e+01, 1.07e+01, 3.97e+04]    [3.46e+02, 3.24e-02, 4.74e+01, 1.07e+01, 3.97e+04]    []  \n",
      "99000 [2.15e-02]\n",
      "99000 [1.00e+00]\n",
      "\n",
      "Best model at step 98000:\n",
      "  train loss: 3.91e+04\n",
      "  test loss: 3.88e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.215051 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.010799 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "99000     [4.75e+02, 3.24e-02, 4.74e+01, 1.07e+01, 3.97e+04]    [3.46e+02, 3.24e-02, 4.74e+01, 1.07e+01, 3.97e+04]    []  \n",
      "99000 [2.15e-02]\n",
      "99000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724539955.253030      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "100000    [6.40e+02, 3.01e-02, 5.63e+01, 1.32e+01, 3.85e+04]    [2.91e+02, 3.01e-02, 5.63e+01, 1.32e+01, 3.85e+04]    []  \n",
      "100000 [2.24e-02]\n",
      "100000 [1.00e+00]\n",
      "\n",
      "Best model at step 98000:\n",
      "  train loss: 3.91e+04\n",
      "  test loss: 3.88e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.337407 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007774 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "100000    [6.40e+02, 3.01e-02, 5.63e+01, 1.32e+01, 3.85e+04]    [2.91e+02, 3.01e-02, 5.63e+01, 1.32e+01, 3.85e+04]    []  \n",
      "100000 [2.24e-02]\n",
      "100000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540002.461431      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "101000    [4.17e+02, 3.28e-02, 4.78e+01, 1.06e+01, 3.98e+04]    [3.23e+02, 3.28e-02, 4.78e+01, 1.06e+01, 3.98e+04]    []  \n",
      "101000 [2.16e-02]\n",
      "101000 [1.00e+00]\n",
      "\n",
      "Best model at step 98000:\n",
      "  train loss: 3.91e+04\n",
      "  test loss: 3.88e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.179727 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011487 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "101000    [4.17e+02, 3.28e-02, 4.78e+01, 1.06e+01, 3.98e+04]    [3.23e+02, 3.28e-02, 4.78e+01, 1.06e+01, 3.98e+04]    []  \n",
      "101000 [2.16e-02]\n",
      "101000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540049.817334      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "102000    [8.92e+02, 3.54e-02, 5.71e+01, 1.34e+01, 3.84e+04]    [2.95e+02, 3.54e-02, 5.71e+01, 1.34e+01, 3.84e+04]    []  \n",
      "102000 [2.23e-02]\n",
      "102000 [1.00e+00]\n",
      "\n",
      "Best model at step 98000:\n",
      "  train loss: 3.91e+04\n",
      "  test loss: 3.88e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.367225 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008110 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "102000    [8.92e+02, 3.54e-02, 5.71e+01, 1.34e+01, 3.84e+04]    [2.95e+02, 3.54e-02, 5.71e+01, 1.34e+01, 3.84e+04]    []  \n",
      "102000 [2.23e-02]\n",
      "102000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540097.077528      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "103000    [3.31e+02, 3.85e-02, 4.44e+01, 9.40e+00, 4.06e+04]    [3.14e+02, 3.85e-02, 4.44e+01, 9.40e+00, 4.06e+04]    []  \n",
      "103000 [2.23e-02]\n",
      "103000 [1.00e+00]\n",
      "\n",
      "Best model at step 98000:\n",
      "  train loss: 3.91e+04\n",
      "  test loss: 3.88e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.205918 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007934 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "103000    [3.31e+02, 3.85e-02, 4.44e+01, 9.40e+00, 4.06e+04]    [3.14e+02, 3.85e-02, 4.44e+01, 9.40e+00, 4.06e+04]    []  \n",
      "103000 [2.23e-02]\n",
      "103000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540144.350099      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "104000    [2.19e+03, 3.05e-02, 5.69e+01, 1.32e+01, 3.84e+04]    [3.12e+02, 3.05e-02, 5.69e+01, 1.32e+01, 3.84e+04]    []  \n",
      "104000 [2.21e-02]\n",
      "104000 [1.00e+00]\n",
      "\n",
      "Best model at step 98000:\n",
      "  train loss: 3.91e+04\n",
      "  test loss: 3.88e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.349771 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007939 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "104000    [2.19e+03, 3.05e-02, 5.69e+01, 1.32e+01, 3.84e+04]    [3.12e+02, 3.05e-02, 5.69e+01, 1.32e+01, 3.84e+04]    []  \n",
      "104000 [2.21e-02]\n",
      "104000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540191.643521      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "105000    [9.81e+02, 3.01e-02, 5.76e+01, 1.35e+01, 3.83e+04]    [2.73e+02, 3.01e-02, 5.76e+01, 1.35e+01, 3.83e+04]    []  \n",
      "105000 [2.25e-02]\n",
      "105000 [1.00e+00]\n",
      "\n",
      "Best model at step 98000:\n",
      "  train loss: 3.91e+04\n",
      "  test loss: 3.88e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.229418 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011837 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "105000    [9.81e+02, 3.01e-02, 5.76e+01, 1.35e+01, 3.83e+04]    [2.73e+02, 3.01e-02, 5.76e+01, 1.35e+01, 3.83e+04]    []  \n",
      "105000 [2.25e-02]\n",
      "105000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540239.039098      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "106000    [3.91e+02, 3.56e-02, 4.27e+01, 8.51e+00, 4.12e+04]    [3.65e+02, 3.56e-02, 4.27e+01, 8.51e+00, 4.12e+04]    []  \n",
      "106000 [2.00e-02]\n",
      "106000 [1.00e+00]\n",
      "\n",
      "Best model at step 98000:\n",
      "  train loss: 3.91e+04\n",
      "  test loss: 3.88e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.341746 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.010549 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "106000    [3.91e+02, 3.56e-02, 4.27e+01, 8.51e+00, 4.12e+04]    [3.65e+02, 3.56e-02, 4.27e+01, 8.51e+00, 4.12e+04]    []  \n",
      "106000 [2.00e-02]\n",
      "106000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540286.230830      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "107000    [1.13e+03, 3.08e-02, 5.67e+01, 1.33e+01, 3.83e+04]    [2.64e+02, 3.08e-02, 5.67e+01, 1.33e+01, 3.83e+04]    []  \n",
      "107000 [2.20e-02]\n",
      "107000 [1.00e+00]\n",
      "\n",
      "Best model at step 98000:\n",
      "  train loss: 3.91e+04\n",
      "  test loss: 3.88e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.211458 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008767 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "107000    [1.13e+03, 3.08e-02, 5.67e+01, 1.33e+01, 3.83e+04]    [2.64e+02, 3.08e-02, 5.67e+01, 1.33e+01, 3.83e+04]    []  \n",
      "107000 [2.20e-02]\n",
      "107000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540333.534350      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "108000    [1.48e+03, 3.09e-02, 5.71e+01, 1.36e+01, 3.82e+04]    [2.81e+02, 3.09e-02, 5.71e+01, 1.36e+01, 3.82e+04]    []  \n",
      "108000 [2.24e-02]\n",
      "108000 [1.00e+00]\n",
      "\n",
      "Best model at step 98000:\n",
      "  train loss: 3.91e+04\n",
      "  test loss: 3.88e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.292957 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007714 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "108000    [1.48e+03, 3.09e-02, 5.71e+01, 1.36e+01, 3.82e+04]    [2.81e+02, 3.09e-02, 5.71e+01, 1.36e+01, 3.82e+04]    []  \n",
      "108000 [2.24e-02]\n",
      "108000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540380.760509      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "109000    [4.06e+02, 2.98e-02, 4.60e+01, 9.84e+00, 4.01e+04]    [3.61e+02, 2.98e-02, 4.60e+01, 9.84e+00, 4.01e+04]    []  \n",
      "109000 [2.16e-02]\n",
      "109000 [1.00e+00]\n",
      "\n",
      "Best model at step 98000:\n",
      "  train loss: 3.91e+04\n",
      "  test loss: 3.88e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.253096 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007879 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "109000    [4.06e+02, 2.98e-02, 4.60e+01, 9.84e+00, 4.01e+04]    [3.61e+02, 2.98e-02, 4.60e+01, 9.84e+00, 4.01e+04]    []  \n",
      "109000 [2.16e-02]\n",
      "109000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540428.051085      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "110000    [6.04e+02, 2.91e-02, 5.62e+01, 1.36e+01, 3.82e+04]    [2.49e+02, 2.91e-02, 5.62e+01, 1.36e+01, 3.82e+04]    []  \n",
      "110000 [2.23e-02]\n",
      "110000 [1.00e+00]\n",
      "\n",
      "Best model at step 110000:\n",
      "  train loss: 3.88e+04\n",
      "  test loss: 3.85e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.279184 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008010 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "110000    [6.04e+02, 2.91e-02, 5.62e+01, 1.36e+01, 3.82e+04]    [2.49e+02, 2.91e-02, 5.62e+01, 1.36e+01, 3.82e+04]    []  \n",
      "110000 [2.23e-02]\n",
      "110000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540475.461532      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "111000    [7.56e+02, 2.97e-02, 5.65e+01, 1.38e+01, 3.81e+04]    [2.61e+02, 2.97e-02, 5.65e+01, 1.38e+01, 3.81e+04]    []  \n",
      "111000 [2.22e-02]\n",
      "111000 [1.00e+00]\n",
      "\n",
      "Best model at step 110000:\n",
      "  train loss: 3.88e+04\n",
      "  test loss: 3.85e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.357434 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008205 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "111000    [7.56e+02, 2.97e-02, 5.65e+01, 1.38e+01, 3.81e+04]    [2.61e+02, 2.97e-02, 5.65e+01, 1.38e+01, 3.81e+04]    []  \n",
      "111000 [2.22e-02]\n",
      "111000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540522.755808      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "112000    [5.80e+02, 2.82e-02, 5.71e+01, 1.37e+01, 3.80e+04]    [2.59e+02, 2.82e-02, 5.71e+01, 1.37e+01, 3.80e+04]    []  \n",
      "112000 [2.22e-02]\n",
      "112000 [1.00e+00]\n",
      "\n",
      "Best model at step 112000:\n",
      "  train loss: 3.87e+04\n",
      "  test loss: 3.84e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.275260 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.010549 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "112000    [5.80e+02, 2.82e-02, 5.71e+01, 1.37e+01, 3.80e+04]    [2.59e+02, 2.82e-02, 5.71e+01, 1.37e+01, 3.80e+04]    []  \n",
      "112000 [2.22e-02]\n",
      "112000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540570.005862      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "113000    [1.21e+03, 2.83e-02, 5.78e+01, 1.38e+01, 3.79e+04]    [2.65e+02, 2.83e-02, 5.78e+01, 1.38e+01, 3.79e+04]    []  \n",
      "113000 [2.24e-02]\n",
      "113000 [1.00e+00]\n",
      "\n",
      "Best model at step 112000:\n",
      "  train loss: 3.87e+04\n",
      "  test loss: 3.84e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.162663 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011937 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "113000    [1.21e+03, 2.83e-02, 5.78e+01, 1.38e+01, 3.79e+04]    [2.65e+02, 2.83e-02, 5.78e+01, 1.38e+01, 3.79e+04]    []  \n",
      "113000 [2.24e-02]\n",
      "113000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540616.969310      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "114000    [7.52e+02, 2.90e-02, 5.75e+01, 1.40e+01, 3.79e+04]    [2.59e+02, 2.90e-02, 5.75e+01, 1.40e+01, 3.79e+04]    []  \n",
      "114000 [2.25e-02]\n",
      "114000 [1.00e+00]\n",
      "\n",
      "Best model at step 112000:\n",
      "  train loss: 3.87e+04\n",
      "  test loss: 3.84e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 46.804324 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011501 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "114000    [7.52e+02, 2.90e-02, 5.75e+01, 1.40e+01, 3.79e+04]    [2.59e+02, 2.90e-02, 5.75e+01, 1.40e+01, 3.79e+04]    []  \n",
      "114000 [2.25e-02]\n",
      "114000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540666.909378      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "115000    [3.77e+02, 3.48e-02, 4.04e+01, 7.92e+00, 4.15e+04]    [3.68e+02, 3.48e-02, 4.04e+01, 7.92e+00, 4.15e+04]    []  \n",
      "115000 [2.25e-02]\n",
      "115000 [1.00e+00]\n",
      "\n",
      "Best model at step 112000:\n",
      "  train loss: 3.87e+04\n",
      "  test loss: 3.84e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 50.156067 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008142 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "115000    [3.77e+02, 3.48e-02, 4.04e+01, 7.92e+00, 4.15e+04]    [3.68e+02, 3.48e-02, 4.04e+01, 7.92e+00, 4.15e+04]    []  \n",
      "115000 [2.25e-02]\n",
      "115000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540714.170275      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "116000    [3.44e+02, 1.42e-02, 2.97e+01, 4.02e+00, 4.52e+04]    [3.18e+02, 1.42e-02, 2.97e+01, 4.02e+00, 4.52e+04]    []  \n",
      "116000 [1.77e-02]\n",
      "116000 [1.00e+00]\n",
      "\n",
      "Best model at step 112000:\n",
      "  train loss: 3.87e+04\n",
      "  test loss: 3.84e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.275253 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007950 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "116000    [3.44e+02, 1.42e-02, 2.97e+01, 4.02e+00, 4.52e+04]    [3.18e+02, 1.42e-02, 2.97e+01, 4.02e+00, 4.52e+04]    []  \n",
      "116000 [1.77e-02]\n",
      "116000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540761.381323      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "117000    [8.43e+02, 2.44e-02, 5.68e+01, 1.24e+01, 3.85e+04]    [2.96e+02, 2.44e-02, 5.68e+01, 1.24e+01, 3.85e+04]    []  \n",
      "117000 [2.11e-02]\n",
      "117000 [1.00e+00]\n",
      "\n",
      "Best model at step 112000:\n",
      "  train loss: 3.87e+04\n",
      "  test loss: 3.84e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.248323 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008082 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "117000    [8.43e+02, 2.44e-02, 5.68e+01, 1.24e+01, 3.85e+04]    [2.96e+02, 2.44e-02, 5.68e+01, 1.24e+01, 3.85e+04]    []  \n",
      "117000 [2.11e-02]\n",
      "117000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540808.742138      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "118000    [5.09e+02, 2.61e-02, 5.84e+01, 1.35e+01, 3.80e+04]    [2.42e+02, 2.61e-02, 5.84e+01, 1.35e+01, 3.80e+04]    []  \n",
      "118000 [2.13e-02]\n",
      "118000 [1.00e+00]\n",
      "\n",
      "Best model at step 118000:\n",
      "  train loss: 3.86e+04\n",
      "  test loss: 3.84e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.334479 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011248 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "118000    [5.09e+02, 2.61e-02, 5.84e+01, 1.35e+01, 3.80e+04]    [2.42e+02, 2.61e-02, 5.84e+01, 1.35e+01, 3.80e+04]    []  \n",
      "118000 [2.13e-02]\n",
      "118000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540856.066098      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "119000    [8.03e+02, 2.82e-02, 5.96e+01, 1.37e+01, 3.80e+04]    [2.46e+02, 2.82e-02, 5.96e+01, 1.37e+01, 3.80e+04]    []  \n",
      "119000 [2.19e-02]\n",
      "119000 [1.00e+00]\n",
      "\n",
      "Best model at step 118000:\n",
      "  train loss: 3.86e+04\n",
      "  test loss: 3.84e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.293293 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008137 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "119000    [8.03e+02, 2.82e-02, 5.96e+01, 1.37e+01, 3.80e+04]    [2.46e+02, 2.82e-02, 5.96e+01, 1.37e+01, 3.80e+04]    []  \n",
      "119000 [2.19e-02]\n",
      "119000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540903.386916      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "120000    [8.59e+02, 2.95e-02, 6.08e+01, 1.36e+01, 3.80e+04]    [2.56e+02, 2.95e-02, 6.08e+01, 1.36e+01, 3.80e+04]    []  \n",
      "120000 [2.22e-02]\n",
      "120000 [1.00e+00]\n",
      "\n",
      "Best model at step 118000:\n",
      "  train loss: 3.86e+04\n",
      "  test loss: 3.84e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.311253 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.009079 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "120000    [8.59e+02, 2.95e-02, 6.08e+01, 1.36e+01, 3.80e+04]    [2.56e+02, 2.95e-02, 6.08e+01, 1.36e+01, 3.80e+04]    []  \n",
      "120000 [2.22e-02]\n",
      "120000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540950.862107      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "121000    [3.24e+02, 3.59e-02, 4.49e+01, 8.42e+00, 4.11e+04]    [3.49e+02, 3.59e-02, 4.49e+01, 8.42e+00, 4.11e+04]    []  \n",
      "121000 [2.30e-02]\n",
      "121000 [1.00e+00]\n",
      "\n",
      "Best model at step 118000:\n",
      "  train loss: 3.86e+04\n",
      "  test loss: 3.84e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.497615 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007930 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "121000    [3.24e+02, 3.59e-02, 4.49e+01, 8.42e+00, 4.11e+04]    [3.49e+02, 3.59e-02, 4.49e+01, 8.42e+00, 4.11e+04]    []  \n",
      "121000 [2.30e-02]\n",
      "121000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724540998.251051      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "122000    [5.69e+02, 3.12e-02, 6.17e+01, 1.37e+01, 3.80e+04]    [2.29e+02, 3.12e-02, 6.17e+01, 1.37e+01, 3.80e+04]    []  \n",
      "122000 [2.24e-02]\n",
      "122000 [1.00e+00]\n",
      "\n",
      "Best model at step 122000:\n",
      "  train loss: 3.86e+04\n",
      "  test loss: 3.83e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.347867 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008207 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "122000    [5.69e+02, 3.12e-02, 6.17e+01, 1.37e+01, 3.80e+04]    [2.29e+02, 3.12e-02, 6.17e+01, 1.37e+01, 3.80e+04]    []  \n",
      "122000 [2.24e-02]\n",
      "122000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724541045.523905      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "123000    [2.48e+02, 2.81e-02, 4.83e+01, 8.81e+00, 4.08e+04]    [2.71e+02, 2.81e-02, 4.83e+01, 8.81e+00, 4.08e+04]    []  \n",
      "123000 [2.26e-02]\n",
      "123000 [1.00e+00]\n",
      "\n",
      "Best model at step 122000:\n",
      "  train loss: 3.86e+04\n",
      "  test loss: 3.83e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.249549 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011622 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "123000    [2.48e+02, 2.81e-02, 4.83e+01, 8.81e+00, 4.08e+04]    [2.71e+02, 2.81e-02, 4.83e+01, 8.81e+00, 4.08e+04]    []  \n",
      "123000 [2.26e-02]\n",
      "123000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724541092.920396      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "124000    [3.15e+02, 4.15e-02, 3.14e+01, 4.46e+00, 4.46e+04]    [3.04e+02, 4.15e-02, 3.14e+01, 4.46e+00, 4.46e+04]    []  \n",
      "124000 [1.94e-02]\n",
      "124000 [1.00e+00]\n",
      "\n",
      "Best model at step 122000:\n",
      "  train loss: 3.86e+04\n",
      "  test loss: 3.83e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.398710 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011941 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "124000    [3.15e+02, 4.15e-02, 3.14e+01, 4.46e+00, 4.46e+04]    [3.04e+02, 4.15e-02, 3.14e+01, 4.46e+00, 4.46e+04]    []  \n",
      "124000 [1.94e-02]\n",
      "124000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724541140.319624      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "125000    [8.93e+02, 3.50e-02, 5.97e+01, 1.32e+01, 3.82e+04]    [2.41e+02, 3.50e-02, 5.97e+01, 1.32e+01, 3.82e+04]    []  \n",
      "125000 [2.18e-02]\n",
      "125000 [1.00e+00]\n",
      "\n",
      "Best model at step 122000:\n",
      "  train loss: 3.86e+04\n",
      "  test loss: 3.83e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.340059 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008828 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "125000    [8.93e+02, 3.50e-02, 5.97e+01, 1.32e+01, 3.82e+04]    [2.41e+02, 3.50e-02, 5.97e+01, 1.32e+01, 3.82e+04]    []  \n",
      "125000 [2.18e-02]\n",
      "125000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724541187.559837      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "126000    [2.45e+02, 2.91e-02, 4.92e+01, 9.52e+00, 4.03e+04]    [2.50e+02, 2.91e-02, 4.92e+01, 9.52e+00, 4.03e+04]    []  \n",
      "126000 [2.17e-02]\n",
      "126000 [1.00e+00]\n",
      "\n",
      "Best model at step 122000:\n",
      "  train loss: 3.86e+04\n",
      "  test loss: 3.83e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.248209 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007981 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "126000    [2.45e+02, 2.91e-02, 4.92e+01, 9.52e+00, 4.03e+04]    [2.50e+02, 2.91e-02, 4.92e+01, 9.52e+00, 4.03e+04]    []  \n",
      "126000 [2.17e-02]\n",
      "126000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724541234.908064      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "127000    [7.95e+02, 3.49e-02, 6.27e+01, 1.37e+01, 3.79e+04]    [2.43e+02, 3.49e-02, 6.27e+01, 1.37e+01, 3.79e+04]    []  \n",
      "127000 [2.18e-02]\n",
      "127000 [1.00e+00]\n",
      "\n",
      "Best model at step 122000:\n",
      "  train loss: 3.86e+04\n",
      "  test loss: 3.83e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.385356 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.010850 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "127000    [7.95e+02, 3.49e-02, 6.27e+01, 1.37e+01, 3.79e+04]    [2.43e+02, 3.49e-02, 6.27e+01, 1.37e+01, 3.79e+04]    []  \n",
      "127000 [2.18e-02]\n",
      "127000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724541282.237818      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "128000    [1.62e+03, 3.70e-02, 6.36e+01, 1.38e+01, 3.79e+04]    [2.60e+02, 3.70e-02, 6.36e+01, 1.38e+01, 3.79e+04]    []  \n",
      "128000 [2.20e-02]\n",
      "128000 [1.00e+00]\n",
      "\n",
      "Best model at step 122000:\n",
      "  train loss: 3.86e+04\n",
      "  test loss: 3.83e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.281076 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.011624 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "128000    [1.62e+03, 3.70e-02, 6.36e+01, 1.38e+01, 3.79e+04]    [2.60e+02, 3.70e-02, 6.36e+01, 1.38e+01, 3.79e+04]    []  \n",
      "128000 [2.20e-02]\n",
      "128000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724541329.670677      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "129000    [4.73e+02, 5.38e-02, 6.01e+01, 1.25e+01, 3.85e+04]    [2.91e+02, 5.38e-02, 6.01e+01, 1.25e+01, 3.85e+04]    []  \n",
      "129000 [2.18e-02]\n",
      "129000 [1.00e+00]\n",
      "\n",
      "Best model at step 122000:\n",
      "  train loss: 3.86e+04\n",
      "  test loss: 3.83e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.428342 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008135 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "129000    [4.73e+02, 5.38e-02, 6.01e+01, 1.25e+01, 3.85e+04]    [2.91e+02, 5.38e-02, 6.01e+01, 1.25e+01, 3.85e+04]    []  \n",
      "129000 [2.18e-02]\n",
      "129000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724541377.030183      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "130000    [3.31e+02, 4.40e-02, 6.32e+01, 1.43e+01, 3.77e+04]    [2.41e+02, 4.40e-02, 6.32e+01, 1.43e+01, 3.77e+04]    []  \n",
      "130000 [2.16e-02]\n",
      "130000 [1.00e+00]\n",
      "\n",
      "Best model at step 130000:\n",
      "  train loss: 3.81e+04\n",
      "  test loss: 3.80e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.340827 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007992 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "130000    [3.31e+02, 4.40e-02, 6.32e+01, 1.43e+01, 3.77e+04]    [2.41e+02, 4.40e-02, 6.32e+01, 1.43e+01, 3.77e+04]    []  \n",
      "130000 [2.16e-02]\n",
      "130000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724541424.470931      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "131000    [3.27e+02, 7.96e-02, 4.77e+01, 8.62e+00, 4.09e+04]    [3.34e+02, 7.96e-02, 4.77e+01, 8.62e+00, 4.09e+04]    []  \n",
      "131000 [2.23e-02]\n",
      "131000 [1.00e+00]\n",
      "\n",
      "Best model at step 130000:\n",
      "  train loss: 3.81e+04\n",
      "  test loss: 3.80e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.430116 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008083 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "131000    [3.27e+02, 7.96e-02, 4.77e+01, 8.62e+00, 4.09e+04]    [3.34e+02, 7.96e-02, 4.77e+01, 8.62e+00, 4.09e+04]    []  \n",
      "131000 [2.23e-02]\n",
      "131000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724541471.852404      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "132000    [6.74e+02, 5.09e-02, 5.99e+01, 1.41e+01, 3.78e+04]    [2.27e+02, 5.09e-02, 5.99e+01, 1.41e+01, 3.78e+04]    []  \n",
      "132000 [2.19e-02]\n",
      "132000 [1.00e+00]\n",
      "\n",
      "Best model at step 130000:\n",
      "  train loss: 3.81e+04\n",
      "  test loss: 3.80e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.422443 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007870 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "132000    [6.74e+02, 5.09e-02, 5.99e+01, 1.41e+01, 3.78e+04]    [2.27e+02, 5.09e-02, 5.99e+01, 1.41e+01, 3.78e+04]    []  \n",
      "132000 [2.19e-02]\n",
      "132000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724541519.240477      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "133000    [1.29e+03, 4.74e-02, 5.57e+01, 1.33e+01, 3.82e+04]    [2.65e+02, 4.74e-02, 5.57e+01, 1.33e+01, 3.82e+04]    []  \n",
      "133000 [2.13e-02]\n",
      "133000 [1.00e+00]\n",
      "\n",
      "Best model at step 130000:\n",
      "  train loss: 3.81e+04\n",
      "  test loss: 3.80e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.314809 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007837 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "133000    [1.29e+03, 4.74e-02, 5.57e+01, 1.33e+01, 3.82e+04]    [2.65e+02, 4.74e-02, 5.57e+01, 1.33e+01, 3.82e+04]    []  \n",
      "133000 [2.13e-02]\n",
      "133000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724541566.567147      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "134000    [5.11e+02, 5.19e-02, 6.08e+01, 1.40e+01, 3.79e+04]    [2.78e+02, 5.19e-02, 6.08e+01, 1.40e+01, 3.79e+04]    []  \n",
      "134000 [2.10e-02]\n",
      "134000 [1.00e+00]\n",
      "\n",
      "Best model at step 130000:\n",
      "  train loss: 3.81e+04\n",
      "  test loss: 3.80e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.302904 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008113 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "134000    [5.11e+02, 5.19e-02, 6.08e+01, 1.40e+01, 3.79e+04]    [2.78e+02, 5.19e-02, 6.08e+01, 1.40e+01, 3.79e+04]    []  \n",
      "134000 [2.10e-02]\n",
      "134000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724541613.895353      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "135000    [8.39e+02, 5.00e-02, 6.31e+01, 1.43e+01, 3.77e+04]    [2.38e+02, 5.00e-02, 6.31e+01, 1.43e+01, 3.77e+04]    []  \n",
      "135000 [2.14e-02]\n",
      "135000 [1.00e+00]\n",
      "\n",
      "Best model at step 130000:\n",
      "  train loss: 3.81e+04\n",
      "  test loss: 3.80e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.359559 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.012599 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "135000    [8.39e+02, 5.00e-02, 6.31e+01, 1.43e+01, 3.77e+04]    [2.38e+02, 5.00e-02, 6.31e+01, 1.43e+01, 3.77e+04]    []  \n",
      "135000 [2.14e-02]\n",
      "135000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724541661.233261      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "136000    [5.65e+02, 5.00e-02, 6.58e+01, 1.44e+01, 3.76e+04]    [2.31e+02, 5.00e-02, 6.58e+01, 1.44e+01, 3.76e+04]    []  \n",
      "136000 [2.16e-02]\n",
      "136000 [1.00e+00]\n",
      "\n",
      "Best model at step 130000:\n",
      "  train loss: 3.81e+04\n",
      "  test loss: 3.80e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.303922 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.012227 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "136000    [5.65e+02, 5.00e-02, 6.58e+01, 1.44e+01, 3.76e+04]    [2.31e+02, 5.00e-02, 6.58e+01, 1.44e+01, 3.76e+04]    []  \n",
      "136000 [2.16e-02]\n",
      "136000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724541708.659440      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "137000    [3.30e+02, 4.84e-02, 6.71e+01, 1.45e+01, 3.76e+04]    [2.21e+02, 4.84e-02, 6.71e+01, 1.45e+01, 3.76e+04]    []  \n",
      "137000 [2.18e-02]\n",
      "137000 [1.00e+00]\n",
      "\n",
      "Best model at step 137000:\n",
      "  train loss: 3.80e+04\n",
      "  test loss: 3.79e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.417604 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007927 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "137000    [3.30e+02, 4.84e-02, 6.71e+01, 1.45e+01, 3.76e+04]    [2.21e+02, 4.84e-02, 6.71e+01, 1.45e+01, 3.76e+04]    []  \n",
      "137000 [2.18e-02]\n",
      "137000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724541756.001580      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "138000    [3.08e+02, 6.08e-02, 5.07e+01, 8.75e+00, 4.08e+04]    [3.09e+02, 6.08e-02, 5.07e+01, 8.75e+00, 4.08e+04]    []  \n",
      "138000 [2.25e-02]\n",
      "138000 [1.00e+00]\n",
      "\n",
      "Best model at step 137000:\n",
      "  train loss: 3.80e+04\n",
      "  test loss: 3.79e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.347852 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.007987 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "138000    [3.08e+02, 6.08e-02, 5.07e+01, 8.75e+00, 4.08e+04]    [3.09e+02, 6.08e-02, 5.07e+01, 8.75e+00, 4.08e+04]    []  \n",
      "138000 [2.25e-02]\n",
      "138000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724541803.411597      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "139000    [3.11e+02, 6.20e-02, 3.30e+01, 3.80e+00, 4.53e+04]    [3.31e+02, 6.20e-02, 3.30e+01, 3.80e+00, 4.53e+04]    []  \n",
      "139000 [1.81e-02]\n",
      "139000 [1.00e+00]\n",
      "\n",
      "Best model at step 137000:\n",
      "  train loss: 3.80e+04\n",
      "  test loss: 3.79e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.392992 s\n",
      "\n",
      "Compiling model...\n",
      "'compile' took 0.008055 s\n",
      "\n",
      "Warning: epochs is deprecated and will be removed in a future version. Use iterations instead.\n",
      "Training model...\n",
      "\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Presumed Alpha\n",
      "<tf.Variable 'Variable:0' shape=() dtype=float32>\n",
      "Step      Train loss                                            Test loss                                             Test metric\n",
      "139000    [3.11e+02, 6.20e-02, 3.30e+01, 3.80e+00, 4.53e+04]    [3.31e+02, 6.20e-02, 3.30e+01, 3.80e+00, 4.53e+04]    []  \n",
      "139000 [1.81e-02]\n",
      "139000 [1.00e+00]\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "W0000 00:00:1724541850.816084      23 graph_launch.cc:671] Fallback to op-by-op mode because memset node breaks graph update\n"
     ]
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "140000    [3.58e+02, 4.90e-02, 6.41e+01, 1.39e+01, 3.78e+04]    [2.25e+02, 4.90e-02, 6.41e+01, 1.39e+01, 3.78e+04]    []  \n",
      "140000 [2.18e-02]\n",
      "140000 [1.00e+00]\n",
      "\n",
      "Best model at step 137000:\n",
      "  train loss: 3.80e+04\n",
      "  test loss: 3.79e+04\n",
      "  test metric: []\n",
      "\n",
      "'train' took 47.412643 s\n",
      "\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1000x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import os\n",
    "# Set backend\n",
    "os.environ[\"DDE_BACKEND\"] = \"tensorflow\"\n",
    "import tensorflow as tf\n",
    "import deepxde as dde\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "from scipy.interpolate import interp1d\n",
    "from scipy.interpolate import RegularGridInterpolator\n",
    "from deepxde.callbacks import Callback\n",
    "import pandas as pd\n",
    "\n",
    "BATCH_SIZE = 32  # Batch size\n",
    "#LEARNING_RATE = 1e-3  # Learning rate\n",
    "\n",
    "ITERATIONS_A = 20000  # Number of training iterations\n",
    "ITERATIONS_LBFGS = 20000  # Number of training iterations\n",
    "ITERATIONS_A2 = 20000  # Number of training iterations\n",
    "ITERATIONS_LBFGS2 = 10000  # Number of training iterations \n",
    "\n",
    "T_Start = 0\n",
    "TIME_STEP = 0.02\n",
    "T_End = 0.02\n",
    "# Define the computational domain\n",
    "geom = dde.geometry.Interval(-1, 1)\n",
    "time_domain = dde.geometry.TimeDomain(T_Start, T_End)\n",
    "geomtime = dde.geometry.GeometryXTime(geom, time_domain)\n",
    "\n",
    "# Define gamma_2 as a trainable variable with an initial value\n",
    "gamma_1_AC = tf.Variable(0.5, dtype=tf.float32) # Alpha\n",
    "gamma_2_AC = tf.Variable(1.0, dtype=tf.float32, trainable=False) # Kappa \n",
    "def cahn_hilliard(x, y):\n",
    "    print(\"Presumed Alpha\")\n",
    "    print(gamma_1_AC)\n",
    "    dy_t = dde.grad.jacobian(y, x, i=0, j=1)\n",
    "    laplacian_u = dde.grad.hessian(y, x, i=0, j=0)\n",
    "    laplacian_u_cubed = dde.grad.hessian(y**3, x, i=0, j=0)   # second derivative y^3\n",
    "    fourth_derivative_u = dde.grad.hessian(laplacian_u, x, i=0, j=0)\n",
    "    return dy_t - gamma_2_AC * (laplacian_u_cubed - laplacian_u - gamma_1_AC * fourth_derivative_u)\n",
    "\n",
    "# Initial condition Allen Cahn\n",
    "def init_condition_CA(x):\n",
    "    return -np.cos(2 * np.pi * x[:, 0:1])\n",
    "\n",
    "# Initial condition dde for Allen Cahn Equation\n",
    "initial_condition_h_AC = dde.icbc.IC(geomtime, init_condition_CA, lambda _, on_initial: on_initial, component=0)\n",
    "\n",
    "# Boundary Condition for the Allen-Cahn equation\n",
    "bc_h = dde.icbc.PeriodicBC(geomtime, 0, lambda _, on_boundary: on_boundary, derivative_order=0, component=0)\n",
    "bc_h_deriv = dde.icbc.PeriodicBC(geomtime, 0, lambda _, on_boundary: on_boundary, derivative_order=1, component=0)\n",
    "\n",
    "\n",
    "# Load the data from the text file\n",
    "data = np.loadtxt('/kaggle/input/output-ch1d/output-CH1d.txt', skiprows=1)\n",
    "print(data)\n",
    "# Split the data into spatial coordinates (x), time (t), and solution values (u)\n",
    "observed_x = data[:, 0:1]  # The x column (as 2D array)\n",
    "observed_t = data[:, 1:2]  # The t column (as 2D array)\n",
    "observed_h = data[:, 2:4]  # The solution column (as 2D array)\n",
    "# Combine x and t to create the observation points in the space-time domain\n",
    "observed_xt = np.hstack((observed_x, observed_t))\n",
    "# Define the PointSetBC using the observed points and solution values\n",
    "observe_h_AC = dde.icbc.PointSetBC(observed_xt, observed_h, component=0)\n",
    "\n",
    "data_AC_inverse = dde.data.TimePDE(\n",
    "        geomtime,\n",
    "        cahn_hilliard,\n",
    "        #[bc_h, bc_h_deriv, initial_condition_h_AC],  # Include observe_h here\n",
    "        [bc_h, bc_h_deriv, initial_condition_h_AC, observe_h_AC],  # Include observe_h here\n",
    "        num_domain=20000,\n",
    "        num_boundary=1600,\n",
    "        num_initial=4096,\n",
    "        anchors=observed_xt,  # Make sure observed_xt is used as anchors if necessary\n",
    "        num_test=40000,\n",
    "    )\n",
    "\n",
    "# Your file path\n",
    "file_path = \"kaggle/working/losses_simple.txt\"\n",
    "# Check if file exists and delete it\n",
    "if os.path.exists(file_path):\n",
    "    os.remove(file_path)\n",
    "    print(f\"Removed existing file: {file_path}\")\n",
    "\n",
    "class SimpleLossTrackingCallback(Callback):\n",
    "    def __init__(self, every_n_epochs=1000, file_path=file_path):\n",
    "        super(SimpleLossTrackingCallback, self).__init__()\n",
    "        self.every_n_epochs = every_n_epochs\n",
    "        self.file_path = file_path\n",
    "        \n",
    "        # Ensure the directory exists\n",
    "        os.makedirs(os.path.dirname(self.file_path), exist_ok=True)\n",
    "        \n",
    "        # Check if file exists and is not empty, if so, skip writing the header\n",
    "        if not os.path.exists(self.file_path) or os.stat(self.file_path).st_size == 0:\n",
    "            with open(self.file_path, \"w\") as f:\n",
    "                f.write(\"Epoch,PDE Loss,BC1 Loss,BC2 Loss,IC Loss,Observe Loss\\n\")\n",
    "\n",
    "    def on_epoch_end(self):\n",
    "        if self.model.train_state.step % self.every_n_epochs == 0 or self.model.train_state.step == 1:\n",
    "            current_losses = self.model.train_state.loss_train\n",
    "            loss_str = \",\".join(map(str, current_losses))\n",
    "            with open(self.file_path, \"a\") as f:\n",
    "                f.write(f\"{self.model.train_state.step},{loss_str}\\n\")\n",
    "\n",
    "iterations_list = [0]  # Starting with iteration 0\n",
    "\n",
    "gamma_1_values = [gamma_1_AC.value().numpy()]  # Assuming this is how you access the value of your variable\n",
    "gamma_2_values = [gamma_2_AC.value().numpy()]  # Assuming this is how you access the value of your variable\n",
    "\n",
    "# Network Architecure\n",
    "#net = dde.nn.FNN([2] + [128] * 6 + [1], \"tanh\", \"Glorot normal\")\n",
    "net = dde.nn.FNN([2] + [60] * 4 + [1], \"tanh\", \"Glorot normal\")\n",
    "variable_gamma_1 = dde.callbacks.VariableValue(gamma_1_AC, period=1000)\n",
    "variable_gamma_2 = dde.callbacks.VariableValue(gamma_2_AC, period=1000)\n",
    "detailed_loss_tracker = SimpleLossTrackingCallback()\n",
    "model = dde.Model(data_AC_inverse, net)\n",
    "\n",
    "Loss_Weights = [1, 1, 1, 1, 1000]\n",
    "\n",
    "total_iterations = 0\n",
    "while total_iterations < 140000:\n",
    "                # Calculate the number of iterations for this loop\n",
    "                iter_this_loop = 1000\n",
    "                # Update the total iterations\n",
    "                #model.compile(\"adam\", lr=1e-3, loss= 'MSE', loss_weights=Loss_Weights, external_trainable_variables=[gamma_1_AC, gamma_2_AC])\n",
    "                #losshistory, train_state = model.train(epochs=70000, display_every=1000, callbacks=[variable_gamma_1, variable_gamma_2, detailed_loss_tracker])\n",
    "\n",
    "                model.compile(\"adam\", lr=1e-3, loss= 'MSE', loss_weights=Loss_Weights, external_trainable_variables=[gamma_1_AC, gamma_2_AC])\n",
    "                losshistory, train_state = model.train(epochs=iter_this_loop, display_every=1000, callbacks=[variable_gamma_1, variable_gamma_2, detailed_loss_tracker])\n",
    "                # Update gamma value and error after training\n",
    "                current_gamma_1_value = gamma_1_AC.value().numpy()\n",
    "                current_gamma_2_value = gamma_2_AC.value().numpy()\n",
    "\n",
    "                # model.compile(\"L-BFGS\", loss = 'MSE', loss_weights = Loss_Weights, external_trainable_variables=[gamma_2_AC])\n",
    "                # losshistory, train_state = model.train(display_every=1000, callbacks=[observed_data_loss_callback, variable])\n",
    "\n",
    "                # Update gamma value and error after training\n",
    "                gamma_1_values.append(current_gamma_1_value)\n",
    "                gamma_2_values.append(current_gamma_2_value)\n",
    "\n",
    "                iterations_list.append(total_iterations + iter_this_loop)\n",
    "\n",
    "                total_iterations += 1000\n",
    "\n",
    "plt.figure(figsize=(10, 6))\n",
    "plt.plot(iterations_list, gamma_1_values, '-o', label='Presumed Alpha', color='blue')\n",
    "plt.plot(iterations_list, gamma_2_values, '-o', label='Presumed Kappa', color='red')\n",
    "plt.xlabel('Gamma Value', fontsize=14)\n",
    "plt.ylabel('Iterations', fontsize=14)\n",
    "plt.title('Iterations vs. Gamma Value', fontsize=16)\n",
    "plt.legend()\n",
    "plt.grid(True, which=\"both\", ls=\"--\")\n",
    "plt.show()\n",
    "\n",
    "\n",
    "# Load the losses from the file\n",
    "losses_df = pd.read_csv(file_path)\n",
    "\n",
    "# Calculate the total loss as the sum of component-wise losses for each iteration\n",
    "# Assuming that the first column is 'Epoch' and the rest are loss components\n",
    "loss_components = losses_df.columns[1:]  # Exclude 'Epoch'\n",
    "losses_df['Total Loss'] = losses_df[loss_components].sum(axis=1)\n",
    "\n",
    "# Plotting\n",
    "plt.figure(figsize=(10, 6))\n",
    "\n",
    "# Plot component-wise losses\n",
    "for component in loss_components:\n",
    "    plt.plot(losses_df['Epoch'], losses_df[component], label=component)\n",
    "\n",
    "# Plot total loss\n",
    "plt.plot(losses_df['Epoch'], losses_df['Total Loss'], label='Total Loss', color='black', linewidth=2, linestyle='--')\n",
    "\n",
    "plt.xlabel('Iteration', fontsize=14)\n",
    "plt.ylabel('Loss', fontsize=14)\n",
    "plt.title('Loss Components and Total Loss over Iterations', fontsize=16)\n",
    "plt.legend()\n",
    "plt.grid(True)\n",
    "plt.yscale('log')  # Use logarithmic scale if desired\n",
    "\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2ec9c52c",
   "metadata": {
    "papermill": {
     "duration": 0.138103,
     "end_time": "2024-08-24T23:24:49.946978",
     "exception": false,
     "start_time": "2024-08-24T23:24:49.808875",
     "status": "completed"
    },
    "tags": []
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kaggle": {
   "accelerator": "gpu",
   "dataSources": [
    {
     "datasetId": 5522806,
     "sourceId": 9143912,
     "sourceType": "datasetVersion"
    },
    {
     "datasetId": 5566588,
     "sourceId": 9206556,
     "sourceType": "datasetVersion"
    }
   ],
   "dockerImageVersionId": 30747,
   "isGpuEnabled": true,
   "isInternetEnabled": true,
   "language": "python",
   "sourceType": "notebook"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.13"
  },
  "papermill": {
   "default_parameters": {},
   "duration": 6664.199236,
   "end_time": "2024-08-24T23:24:54.422853",
   "environment_variables": {},
   "exception": null,
   "input_path": "__notebook__.ipynb",
   "output_path": "__notebook__.ipynb",
   "parameters": {},
   "start_time": "2024-08-24T21:33:50.223617",
   "version": "2.5.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
